[
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(- (/ (/ (- (/ x (/ (+ 1.0 x) x)) x) x) x) 0.0)",
    "output_parens": 7,
    "avg_bits_err_input": 14.553174895831383,
    "avg_bits_err_output": 14.295669130783187,
    "avg_bits_err_improve": 0.25750576504819556,
    "time": 15433.29443359375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(if (<= x -7.6e+153) (- (/ 1.0 (+ x 1.0)) (/ 1.0 x)) (if (<= x 3.15e+153) (/ (- (- (* (pow (+ 1.0 x) -2.0) (+ x 2.0)) (/ 1.0 x)) (pow (+ 1.0 x) -2.0)) 1.0) (- (/ 1.0 (+ x 1.0)) (/ 1.0 x))))",
    "output_parens": 22,
    "avg_bits_err_input": 14.553174895831383,
    "avg_bits_err_output": 4.076531664131744,
    "avg_bits_err_improve": 10.476643231699638,
    "time": 150657.9013671875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(- (/ (/ (- (/ x (/ (+ 1.0 x) x)) x) x) x) 0.0)",
    "output_parens": 7,
    "avg_bits_err_input": 14.553174895831383,
    "avg_bits_err_output": 14.295669130783187,
    "avg_bits_err_improve": 0.25750576504819556,
    "time": 13642.18603515625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(- (/ (/ (- (/ x (/ (+ 1.0 x) x)) x) x) x) 0.0)",
    "output_parens": 7,
    "avg_bits_err_input": 14.553174895831383,
    "avg_bits_err_output": 14.295669130783187,
    "avg_bits_err_improve": 0.25750576504819556,
    "time": 15953.333740234375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(* (pow (+ x 1.0) -2.0) (/ (fma x -1.0 -1.0) x))",
    "output_parens": 5,
    "avg_bits_err_input": 14.553174895831383,
    "avg_bits_err_output": 0.02091748125036058,
    "avg_bits_err_improve": 14.532257414581021,
    "time": 13658.80908203125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(* -2.0 (- (/ (/ -1.0 (+ x (+ x 2.0))) (- 1.0 x)) (/ (+ (/ x (- x -1.0)) -1.0) (- (+ x x) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 14.879906971499576,
    "avg_bits_err_output": 12.917084967464763,
    "avg_bits_err_improve": 1.9628220040348126,
    "time": 17688.697509765625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output_parens": 5,
    "avg_bits_err_input": 14.879906971499576,
    "avg_bits_err_output": 14.879906971499576,
    "avg_bits_err_improve": 0,
    "time": 51831.458984375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(/ (- (/ 2.0 (/ (+ 1.0 x) (+ x -1.0))) 2.0) (if (!= (+ x (- 2.0 x)) 0.0) (/ (if (!= (* x x) 0.0) (/ (fma (* x x) (* x x) (* (- x 2.0) (* (- 2.0 x) (* x x)))) (* x x)) (fma x x (* (- 2.0 x) (- x 2.0)))) (+ x (- 2.0 x))) (+ x (+ x -2.0))))",
    "output_parens": 32,
    "avg_bits_err_input": 14.879906971499576,
    "avg_bits_err_output": 14.899094940515976,
    "avg_bits_err_improve": -0.019187969016400075,
    "time": 21320.778076171875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(- (/ (/ -1.0 (- 1.0 x)) (- -1.0 x)) (/ (+ 1.0 (/ x (- 1.0 x))) (- -1.0 x)))",
    "output_parens": 10,
    "avg_bits_err_input": 14.879906971499576,
    "avg_bits_err_output": 12.917384935723833,
    "avg_bits_err_improve": 1.9625220357757431,
    "time": 18487.456787109375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(/ (/ 2.0 (- -1.0 x)) (+ -1.0 x))",
    "output_parens": 4,
    "avg_bits_err_input": 14.879906971499576,
    "avg_bits_err_output": 0.0715,
    "avg_bits_err_improve": 14.808406971499576,
    "time": 18229.357421875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(/ (+ (- 1.0 (/ x (+ x -1.0))) (- (/ 1.0 (+ x -1.0)))) (+ 1.0 x))",
    "output_parens": 9,
    "avg_bits_err_input": 14.062164864266142,
    "avg_bits_err_output": 12.228568323759076,
    "avg_bits_err_improve": 1.8335965405070667,
    "time": 13955.68505859375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(/ (- 0.0 (/ 2.0 (+ x -1.0))) (+ 1.0 x))",
    "output_parens": 5,
    "avg_bits_err_input": 14.062164864266142,
    "avg_bits_err_output": 0.071,
    "avg_bits_err_improve": 13.991164864266143,
    "time": 21758.852294921875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(/ (- 0.0 (/ 2.0 (+ x -1.0))) (+ 1.0 x))",
    "output_parens": 5,
    "avg_bits_err_input": 14.062164864266142,
    "avg_bits_err_output": 0.071,
    "avg_bits_err_improve": 13.991164864266143,
    "time": 17864.677490234375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(/ (/ 2.0 (- -1.0 x)) (+ -1.0 x))",
    "output_parens": 4,
    "avg_bits_err_input": 14.062164864266142,
    "avg_bits_err_output": 0.070875,
    "avg_bits_err_improve": 13.991289864266143,
    "time": 22159.48046875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (/ (+ (+ -1.0 (/ x (+ x 1.0))) (/ -2.0 (+ x 1.0))) (+ x (+ x -2.0))) (/ (+ -1.0 (/ x (+ x 1.0))) (+ x (+ x -2.0))))",
    "output_parens": 16,
    "avg_bits_err_input": 14.383260165823431,
    "avg_bits_err_output": 12.516860362242781,
    "avg_bits_err_improve": 1.8663998035806504,
    "time": 17947.111083984375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output_parens": 5,
    "avg_bits_err_input": 14.383260165823431,
    "avg_bits_err_output": 14.383260165823431,
    "avg_bits_err_improve": 0,
    "time": 27734.9248046875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(/ (/ -2.0 (+ x -1.0)) (+ 1.0 x))",
    "output_parens": 4,
    "avg_bits_err_input": 14.383260165823431,
    "avg_bits_err_output": 0.073,
    "avg_bits_err_improve": 14.310260165823431,
    "time": 18455.228271484375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(/ (/ -2.0 (+ x -1.0)) (+ 1.0 x))",
    "output_parens": 4,
    "avg_bits_err_input": 14.383260165823431,
    "avg_bits_err_output": 0.073,
    "avg_bits_err_improve": 14.310260165823431,
    "time": 17620.82666015625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(/ (* -2.0 (* (+ x -1.0) (pow (+ x -1.0) -2.0))) (+ x 1.0))",
    "output_parens": 7,
    "avg_bits_err_input": 14.383260165823431,
    "avg_bits_err_output": 0.04662744375108173,
    "avg_bits_err_improve": 14.33663272207235,
    "time": 51464.357421875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (/ (+ (/ x (- x -1.0)) (- (+ x -1.0) (* x (/ x (- x -1.0))))) (- 1.0 x)) (/ 2.0 (+ x -1.0)))",
    "output_parens": 13,
    "avg_bits_err_input": 28.462837068428296,
    "avg_bits_err_output": 0.5306852920160327,
    "avg_bits_err_improve": 27.932151776412265,
    "time": 21432.647216796875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (/ x (+ x 1.0)) (log (exp (/ (+ 1.0 x) (+ -1.0 x)))))",
    "output_parens": 8,
    "avg_bits_err_input": 28.462837068428296,
    "avg_bits_err_output": 28.470358205189886,
    "avg_bits_err_improve": -0.0075211367615892755,
    "time": 36471.92529296875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (/ (+ (/ x (- x -1.0)) (- (+ x -1.0) (* x (/ x (- x -1.0))))) (- 1.0 x)) (/ 2.0 (+ x -1.0)))",
    "output_parens": 13,
    "avg_bits_err_input": 28.462837068428296,
    "avg_bits_err_output": 0.5306852920160327,
    "avg_bits_err_improve": 27.932151776412265,
    "time": 20319.650634765625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (/ (+ (/ x (- x -1.0)) (- (+ x -1.0) (* x (/ x (- x -1.0))))) (- 1.0 x)) (/ 2.0 (+ x -1.0)))",
    "output_parens": 13,
    "avg_bits_err_input": 28.462837068428296,
    "avg_bits_err_output": 0.5306852920160327,
    "avg_bits_err_improve": 27.932151776412265,
    "time": 20617.25634765625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(+ (/ -1.0 (+ -1.0 x)) (/ (* x (- (+ -1.0 x) (+ x 1.0))) (* (+ -1.0 x) (+ x 1.0))))",
    "output_parens": 11,
    "avg_bits_err_input": 28.462837068428296,
    "avg_bits_err_output": 24.258377901281957,
    "avg_bits_err_improve": 4.204459167146339,
    "time": 40423.878173828125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(+ (if (!= (/ x (+ -2.0 (+ x x))) 0.0) (/ (- (* (/ x (+ -2.0 (+ x x))) (- (/ x (+ x 1.0)) (/ x (+ -2.0 (+ x x))))) (pow (/ x (+ -2.0 (+ x x))) 2.0)) (/ x (+ -2.0 (+ x x)))) (- (/ x (+ x 1.0)) (/ (+ x x) (+ -2.0 (+ x x))))) (- (/ 1.0 (+ x -1.0))))",
    "output_parens": 35,
    "avg_bits_err_input": 29.358130577874952,
    "avg_bits_err_output": 25.65067218917456,
    "avg_bits_err_improve": 3.707458388700392,
    "time": 23844.029052734375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(+ (fma (- (pow (/ (+ x 1.0) (+ x -1.0)) 2.0)) (/ 1.0 (/ (+ x 1.0) (+ x -1.0))) (* (/ 1.0 (/ (+ x 1.0) (+ x -1.0))) (pow (/ (+ x 1.0) (+ x -1.0)) 2.0))) (fma (/ 1.0 (/ (+ x 1.0) (+ x -1.0))) (- (pow (/ (+ x 1.0) (+ x -1.0)) 2.0)) (/ x (+ x 1.0))))",
    "output_parens": 32,
    "avg_bits_err_input": 29.358130577874952,
    "avg_bits_err_output": 29.37432010899058,
    "avg_bits_err_improve": -0.016189531115628597,
    "time": 47495.425048828125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(+ (if (!= (/ x (+ -2.0 (+ x x))) 0.0) (/ (- (* (/ x (+ -2.0 (+ x x))) (- (/ x (+ x 1.0)) (/ x (+ -2.0 (+ x x))))) (* (/ x (+ -2.0 (+ x x))) (/ x (+ -2.0 (+ x x))))) (/ x (+ -2.0 (+ x x)))) (- (/ x (+ x 1.0)) (/ (+ x x) (+ -2.0 (+ x x))))) (- (/ 1.0 (+ x -1.0))))",
    "output_parens": 38,
    "avg_bits_err_input": 29.358130577874952,
    "avg_bits_err_output": 25.65067218917456,
    "avg_bits_err_improve": 3.707458388700392,
    "time": 29663.083984375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(+ (if (!= (/ x (+ -2.0 (+ x x))) 0.0) (/ (- (* (/ x (+ -2.0 (+ x x))) (- (/ x (+ x 1.0)) (/ x (+ -2.0 (+ x x))))) (* (/ x (+ -2.0 (+ x x))) (/ x (+ -2.0 (+ x x))))) (/ x (+ -2.0 (+ x x)))) (- (/ x (+ x 1.0)) (/ (+ x x) (+ -2.0 (+ x x))))) (- (/ 1.0 (+ x -1.0))))",
    "output_parens": 38,
    "avg_bits_err_input": 29.358130577874952,
    "avg_bits_err_output": 25.65067218917456,
    "avg_bits_err_improve": 3.707458388700392,
    "time": 29741.90771484375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(/ (- 1.0 (+ x (- (/ (- -1.0 x) x) (* x (/ (+ 1.0 x) x))))) (* (/ (+ 1.0 x) x) (- 1.0 x)))",
    "output_parens": 13,
    "avg_bits_err_input": 29.358130577874952,
    "avg_bits_err_output": 25.36623889879051,
    "avg_bits_err_improve": 3.9918916790844428,
    "time": 48167.671142578125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (/ (+ (/ x (- x -1.0)) (- (+ x -1.0) (* x (/ x (- x -1.0))))) (- 1.0 x)) (/ 2.0 (+ x -1.0)))",
    "output_parens": 13,
    "avg_bits_err_input": 29.57652331232844,
    "avg_bits_err_output": 0.5193195314702749,
    "avg_bits_err_improve": 29.057203780858167,
    "time": 24751.091064453125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 29.57652331232844,
    "avg_bits_err_output": 29.57652331232844,
    "avg_bits_err_improve": 0,
    "time": 47414.896240234375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (if (!= (+ (/ x (+ x 1.0)) (/ (+ x -1.0) (+ x -1.0))) 0.0) (/ (- (* (/ x (+ x 1.0)) (/ x (+ x 1.0))) (/ (+ x -1.0) (+ x -1.0))) (+ (/ x (+ x 1.0)) (/ (+ x -1.0) (+ x -1.0)))) (- (/ x (+ x 1.0)) (/ (+ x -1.0) (+ x -1.0)))) (/ 2.0 (+ x -1.0)))",
    "output_parens": 33,
    "avg_bits_err_input": 29.57652331232844,
    "avg_bits_err_output": 25.141181743828806,
    "avg_bits_err_improve": 4.435341568499634,
    "time": 23616.09765625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (if (!= (+ (/ x (+ x 1.0)) (/ (+ x -1.0) (+ x -1.0))) 0.0) (/ (- (* (/ x (+ x 1.0)) (/ x (+ x 1.0))) (/ (+ x -1.0) (+ x -1.0))) (+ (/ x (+ x 1.0)) (/ (+ x -1.0) (+ x -1.0)))) (- (/ x (+ x 1.0)) (/ (+ x -1.0) (+ x -1.0)))) (/ 2.0 (+ x -1.0)))",
    "output_parens": 33,
    "avg_bits_err_input": 29.57652331232844,
    "avg_bits_err_output": 25.141181743828806,
    "avg_bits_err_improve": 4.435341568499634,
    "time": 24087.109619140625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(+ (/ 1.0 (- 1.0 x)) (+ (/ x (- 1.0 x)) (/ x (+ 1.0 x))))",
    "output_parens": 8,
    "avg_bits_err_input": 29.57652331232844,
    "avg_bits_err_output": 25.83241581091685,
    "avg_bits_err_improve": 3.744107501411591,
    "time": 63075.397216796875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (- (/ x (+ x 1.0)) (/ (+ x -1.0) (+ x -1.0))) (/ 2.0 (+ x -1.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 29.065162798802888,
    "avg_bits_err_output": 24.7013651150137,
    "avg_bits_err_improve": 4.363797683789187,
    "time": 29774.026123046875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (/ x (+ x 1.0)) (log (exp (/ (+ 1.0 x) (+ -1.0 x)))))",
    "output_parens": 8,
    "avg_bits_err_input": 29.065162798802888,
    "avg_bits_err_output": 29.06887259289911,
    "avg_bits_err_improve": -0.00370979409622052,
    "time": 112827.97607421875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (if (!= (+ (/ x (+ x 1.0)) (/ (+ x -1.0) (+ x -1.0))) 0.0) (/ (- (* (/ x (+ x 1.0)) (/ x (+ x 1.0))) (/ (+ x -1.0) (+ x -1.0))) (+ (/ x (+ x 1.0)) (/ (+ x -1.0) (+ x -1.0)))) (- (/ x (+ x 1.0)) (/ (+ x -1.0) (+ x -1.0)))) (/ 2.0 (+ x -1.0)))",
    "output_parens": 33,
    "avg_bits_err_input": 29.065162798802888,
    "avg_bits_err_output": 24.700708494003997,
    "avg_bits_err_improve": 4.36445430479889,
    "time": 29924.866455078125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (if (!= (+ (/ x (+ x 1.0)) (/ (+ x -1.0) (+ x -1.0))) 0.0) (/ (- (* (/ x (+ x 1.0)) (/ x (+ x 1.0))) (/ (+ x -1.0) (+ x -1.0))) (+ (/ x (+ x 1.0)) (/ (+ x -1.0) (+ x -1.0)))) (- (/ x (+ x 1.0)) (/ (+ x -1.0) (+ x -1.0)))) (/ 2.0 (+ x -1.0)))",
    "output_parens": 33,
    "avg_bits_err_input": 29.065162798802888,
    "avg_bits_err_output": 24.700708494003997,
    "avg_bits_err_improve": 4.36445430479889,
    "time": 37221.727783203125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(/ (+ 1.0 (- (* (fma x -1.0 -1.0) (/ (- -1.0 x) x)) x)) (* (/ (+ 1.0 x) x) (- 1.0 x)))",
    "output_parens": 11,
    "avg_bits_err_input": 29.065162798802888,
    "avg_bits_err_output": 25.11454114524955,
    "avg_bits_err_improve": 3.9506216535533376,
    "time": 55646.283935546875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 2e-291) (* 100.0 (/ (expm1 (* n (log1p (/ i n)))) (/ i n))) (/ (* (- 1.0 (pow (+ 1.0 (/ i n)) n)) -400.0) (/ (+ i (+ i (+ i i))) n)))",
    "output_parens": 25,
    "avg_bits_err_input": 47.69810470040508,
    "avg_bits_err_output": 13.585254832373744,
    "avg_bits_err_improve": 34.11284986803134,
    "time": 25245.425537109375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 2e-291) (* 100.0 (/ (expm1 (* n (log1p (/ i n)))) (/ i n))) (if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 5e-12) (* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n))) (* 100.0 (/ (- (pow (exp n) (log1p (/ i n))) 1.0) (/ i n)))))",
    "output_parens": 38,
    "avg_bits_err_input": 47.69810470040508,
    "avg_bits_err_output": 11.029499185194211,
    "avg_bits_err_improve": 36.66860551521087,
    "time": 55298.0849609375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= n -7.6e-44) (if (!= (/ 100.0 (/ i n)) 0.0) (fma (/ 10000.0 (/ i n)) (/ (pow (+ 1.0 (/ i n)) n) 100.0) (/ -100.0 (/ i n))) (* (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ 100.0 (/ i n)))) 0.0)",
    "output_parens": 22,
    "avg_bits_err_input": 47.69810470040508,
    "avg_bits_err_output": 45.23532851946834,
    "avg_bits_err_improve": 2.4627761809367428,
    "time": 25472.4736328125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 2e-291) (* 100.0 (/ (expm1 (* n (log1p (/ i n)))) (/ i n))) (/ (* (- 1.0 (pow (+ 1.0 (/ i n)) n)) -400.0) (/ (+ (+ i i) (+ i i)) n)))",
    "output_parens": 25,
    "avg_bits_err_input": 47.69810470040508,
    "avg_bits_err_output": 13.585254832373744,
    "avg_bits_err_improve": 34.11284986803134,
    "time": 24715.4814453125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n)) 2e-291) (* 100.0 (/ (expm1 (* n (log1p (/ i n)))) (/ i n))) (* (expm1 (+ n n)) (/ (* n 100.0) i)))",
    "output_parens": 20,
    "avg_bits_err_input": 47.69810470040508,
    "avg_bits_err_output": 11.316293203650547,
    "avg_bits_err_improve": 36.38181149675454,
    "time": 26895.021240234375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 0.0) (* 100.0 (/ (expm1 (* n (log1p (/ i n)))) (/ i n))) (* 100.0 (- (/ (pow (+ (/ i n) 1.0) n) (/ i n)) (/ 1.0 (/ i n)))))",
    "output_parens": 24,
    "avg_bits_err_input": 47.94633672975809,
    "avg_bits_err_output": 13.510333577926145,
    "avg_bits_err_improve": 34.43600315183194,
    "time": 24816.57568359375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 0.0) (* 100.0 (/ (expm1 (* n (log1p (/ i n)))) (/ i n))) (if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 2e-10) (* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n))) (* 100.0 (/ (- (pow (exp n) (log1p (/ i n))) 1.0) (/ i n)))))",
    "output_parens": 38,
    "avg_bits_err_input": 47.94633672975809,
    "avg_bits_err_output": 10.698045807738326,
    "avg_bits_err_improve": 37.24829092201976,
    "time": 58118.822509765625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= n -3.4e+106) (* 100.0 (if (!= (/ 1.0 (/ i n)) 0.0) (- (/ (pow (+ 1.0 (/ i n)) n) (/ (/ (/ (* n n) (/ n i)) (fabs n)) (fabs n))) (/ 1.0 (/ 1.0 (/ 1.0 (/ i n))))) (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n)))) (if (<= n 5.5e-44) (/ (- -100.0 (* (pow (+ 1.0 (/ i n)) n) -100.0)) (/ i n)) (* 100.0 (if (!= (/ 1.0 (/ i n)) 0.0) (- (/ (pow (+ 1.0 (/ i n)) n) (/ (/ (/ (* n n) (/ n i)) (fabs n)) (fabs n))) (/ 1.0 (/ 1.0 (/ 1.0 (/ i n))))) (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n))))))",
    "output_parens": 65,
    "avg_bits_err_input": 47.94633672975809,
    "avg_bits_err_output": 44.02958071880186,
    "avg_bits_err_improve": 3.9167560109562274,
    "time": 25358.247314453125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 0.0) (* 100.0 (/ (expm1 (* n (log1p (/ i n)))) (/ i n))) (* 100.0 (- (/ (pow (+ (/ i n) 1.0) n) (/ i n)) (/ 1.0 (/ i n)))))",
    "output_parens": 24,
    "avg_bits_err_input": 47.94633672975809,
    "avg_bits_err_output": 13.510333577926145,
    "avg_bits_err_improve": 34.43600315183194,
    "time": 25621.1748046875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n)) 0.0) (* 100.0 (/ (expm1 (* n (log1p (/ i n)))) (/ i n))) (if (<= (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n)) 2e-10) (* 100.0 (/ (- (* n (pow (+ 1.0 (/ i n)) n)) n) i)) (* n (/ (+ (* 100.0 (pow (exp n) (log1p (/ i n)))) -100.0) i))))",
    "output_parens": 38,
    "avg_bits_err_input": 47.94633672975809,
    "avg_bits_err_output": 10.494691926586915,
    "avg_bits_err_improve": 37.45164480317117,
    "time": 32210.58447265625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 0.0) (* 100.0 (/ (expm1 (* n (log1p (/ i n)))) (/ i n))) (/ (* (- 200.0 (* 200.0 (pow (+ (/ i n) 1.0) n))) (/ 0.5 (/ i n))) -1.0))",
    "output_parens": 24,
    "avg_bits_err_input": 47.72965976414739,
    "avg_bits_err_output": 13.943319683684264,
    "avg_bits_err_improve": 33.78634008046313,
    "time": 25327.25,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 0.0) (* 100.0 (/ (expm1 (* n (log1p (/ i n)))) (/ i n))) (if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 0.002) (* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n))) (* 100.0 (/ (- (pow (exp n) (log1p (/ i n))) 1.0) (/ i n)))))",
    "output_parens": 38,
    "avg_bits_err_input": 47.72965976414739,
    "avg_bits_err_output": 10.821875676869393,
    "avg_bits_err_improve": 36.907784087278,
    "time": 51887.11962890625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= n -6.5e-174) (* 100.0 (if (!= (/ 1.0 (/ i n)) 0.0) (- (/ (pow (+ 1.0 (/ i n)) n) (/ (log1p (expm1 (* i (/ i (* (fabs n) (/ i n)))))) (fabs n))) (/ 1.0 (/ 1.0 (/ 1.0 (/ i n))))) (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n)))) (if (<= n 8e+127) (- 1.0 (+ (fma (- (pow (+ (/ i n) 1.0) n)) (/ 100.0 (/ i n)) (* 100.0 (/ (pow (+ (/ i n) 1.0) n) (/ i n)))) (- (+ (/ 100.0 (/ i n)) 1.0) (* 100.0 (/ (pow (+ (/ i n) 1.0) n) (/ i n)))))) (* 100.0 (if (!= (/ 1.0 (/ i n)) 0.0) (- (/ (pow (+ 1.0 (/ i n)) n) (/ (log1p (expm1 (* i (/ i (* (fabs n) (/ i n)))))) (fabs n))) (/ 1.0 (/ 1.0 (/ 1.0 (/ i n))))) (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n))))))",
    "output_parens": 87,
    "avg_bits_err_input": 47.72965976414739,
    "avg_bits_err_output": 44.12123101854363,
    "avg_bits_err_improve": 3.60842874560376,
    "time": 28913.448486328125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 0.0) (* 100.0 (/ (expm1 (* n (log1p (/ i n)))) (/ i n))) (/ (- (- 100.0 (* 100.0 (pow (+ (/ i n) 1.0) n)))) (/ 2.0 (/ 2.0 (/ i n)))))",
    "output_parens": 25,
    "avg_bits_err_input": 47.72965976414739,
    "avg_bits_err_output": 13.942909184433397,
    "avg_bits_err_improve": 33.786750579713996,
    "time": 25846.771484375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n)) 0.0) (* 100.0 (/ (expm1 (* n (log1p (/ i n)))) (/ i n))) (if (<= (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n)) 0.002) (* (/ n i) (+ (* 100.0 (pow (+ 1.0 (/ i n)) n)) -100.0)) (* n (/ (+ -100.0 (* 100.0 (pow (exp n) (log1p (/ i n))))) i))))",
    "output_parens": 38,
    "avg_bits_err_input": 47.72965976414739,
    "avg_bits_err_output": 10.612142559757853,
    "avg_bits_err_improve": 37.11751720438954,
    "time": 30734.77783203125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 5e-251) (* 100.0 (/ (expm1 (* n (log1p (/ i n)))) (/ i n))) (- (* 100.0 (/ (pow (+ (/ i n) 1.0) n) (/ i n))) (if (!= (/ 100.0 (/ i n)) 0.0) (- (/ (/ 10000.0 (/ i n)) 100.0) 0.0) (/ 100.0 (/ i n)))))",
    "output_parens": 32,
    "avg_bits_err_input": 47.44885723323919,
    "avg_bits_err_output": 14.359678381311207,
    "avg_bits_err_improve": 33.08917885192798,
    "time": 28878.5927734375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 5e-251) (* 100.0 (/ (expm1 (* n (log1p (/ i n)))) (/ i n))) (if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 5e-38) (* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n))) (* 100.0 (/ (- (pow (exp n) (log1p (/ i n))) 1.0) (/ i n)))))",
    "output_parens": 38,
    "avg_bits_err_input": 47.44885723323919,
    "avg_bits_err_output": 11.825470554674334,
    "avg_bits_err_improve": 35.623386678564856,
    "time": 49587.931884765625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= n -2e+69) (* 100.0 (if (!= (/ 1.0 (/ i n)) 0.0) (- (/ (pow (+ 1.0 (/ i n)) n) (/ (log1p (expm1 (+ i i))) (+ n n))) (/ 1.0 (/ 1.0 (/ 1.0 (/ i n))))) (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n)))) (if (<= n 4e+110) (/ (if (!= (fma (pow (+ 1.0 (/ i n)) n) 100.0 100.0) 0.0) (/ (fma (pow (+ 1.0 (/ i n)) n) (* (pow (+ 1.0 (/ i n)) n) 10000.0) -10000.0) (fma (pow (+ 1.0 (/ i n)) n) 100.0 100.0)) (- -100.0 (* -100.0 (pow (+ 1.0 (/ i n)) n)))) (/ i n)) (* 100.0 (if (!= (/ 1.0 (/ i n)) 0.0) (- (/ (pow (+ 1.0 (/ i n)) n) (/ (log (+ 1.0 (expm1 (+ i i)))) (+ n n))) (/ 1.0 (/ 1.0 (/ 1.0 (/ i n))))) (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n))))))",
    "output_parens": 81,
    "avg_bits_err_input": 47.44885723323919,
    "avg_bits_err_output": 42.924930414845896,
    "avg_bits_err_improve": 4.523926818393292,
    "time": 31247.4638671875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 5e-251) (* 100.0 (/ (expm1 (* n (log1p (/ i n)))) (/ i n))) (- (* 100.0 (/ (pow (+ (/ i n) 1.0) n) (/ i n))) (if (!= (/ 100.0 (/ i n)) 0.0) (- (/ (/ 10000.0 (/ i n)) 100.0) 0.0) (/ 100.0 (/ i n)))))",
    "output_parens": 32,
    "avg_bits_err_input": 47.44885723323919,
    "avg_bits_err_output": 14.359678381311207,
    "avg_bits_err_improve": 33.08917885192798,
    "time": 25442.461181640625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n)) 5e-251) (* 100.0 (/ (expm1 (* n (log1p (/ i n)))) (/ i n))) (if (<= (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n)) 500.0) (/ n (/ i (+ (* (pow (+ 1.0 (/ i n)) n) 100.0) -100.0))) (* n (/ (+ -100.0 (* 100.0 (pow (exp n) (log1p (/ i n))))) i))))",
    "output_parens": 38,
    "avg_bits_err_input": 47.44885723323919,
    "avg_bits_err_output": 10.939969023673338,
    "avg_bits_err_improve": 36.50888820956585,
    "time": 27710.3828125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 0.0) (* 100.0 (/ (expm1 (* n (log1p (/ i n)))) (/ i n))) (* (- 1.0 (pow (+ (/ i n) 1.0) n)) (/ -100.0 (/ i n))))",
    "output_parens": 22,
    "avg_bits_err_input": 47.94557993578987,
    "avg_bits_err_output": 13.498827147421382,
    "avg_bits_err_improve": 34.44675278836849,
    "time": 25992.0830078125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 0.0) (* 100.0 (/ (expm1 (* n (log1p (/ i n)))) (/ i n))) (if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 1e-6) (* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n))) (* 100.0 (/ (- (pow (exp n) (log1p (/ i n))) 1.0) (/ i n)))))",
    "output_parens": 38,
    "avg_bits_err_input": 47.94557993578987,
    "avg_bits_err_output": 10.709453733069827,
    "avg_bits_err_improve": 37.236126202720044,
    "time": 43163.67578125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= n -3.4e-15) (* 100.0 (if (!= (/ 1.0 (/ i n)) 0.0) (- (/ (pow (+ 1.0 (/ i n)) n) (/ (/ (/ (* i i) (/ i n)) n) n)) (/ 1.0 (/ 1.0 (/ 1.0 (/ i n))))) (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n)))) (if (<= n 1.15e+258) (+ (- (* (pow (+ 1.0 (/ i n)) n) (/ 100.0 (/ i n))) (+ 1.0 (/ 100.0 (/ i n)))) 1.0) (* 100.0 (if (!= (/ 1.0 (/ i n)) 0.0) (- (/ (pow (+ 1.0 (/ i n)) n) (/ (/ (/ (* i i) (/ i n)) n) n)) (/ 1.0 (/ 1.0 (/ 1.0 (/ i n))))) (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n))))))",
    "output_parens": 65,
    "avg_bits_err_input": 47.94557993578987,
    "avg_bits_err_output": 45.820597299015866,
    "avg_bits_err_improve": 2.124982636774007,
    "time": 26839.25048828125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 0.0) (* 100.0 (/ (expm1 (* n (log1p (/ i n)))) (/ i n))) (* (- 1.0 (pow (+ (/ i n) 1.0) n)) (/ -100.0 (/ i n))))",
    "output_parens": 22,
    "avg_bits_err_input": 47.94557993578987,
    "avg_bits_err_output": 13.498827147421382,
    "avg_bits_err_improve": 34.44675278836849,
    "time": 27013.4404296875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n)) 0.0) (* 100.0 (/ (expm1 (* n (log1p (/ i n)))) (/ i n))) (if (<= (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n)) 1e-6) (/ (- (* (pow (+ 1.0 (/ i n)) n) (* i (/ n i))) n) (* i 0.01)) (* 100.0 (/ (+ (pow (exp n) (log1p (/ i n))) -1.0) (/ i n)))))",
    "output_parens": 40,
    "avg_bits_err_input": 47.94557993578987,
    "avg_bits_err_output": 10.709967077865457,
    "avg_bits_err_improve": 37.235612857924416,
    "time": 33150.10546875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 5e-271) (* 100.0 (/ (expm1 (* n (log1p (/ i n)))) (/ i n))) (if (!= (/ 100.0 (/ i n)) 0.0) (* (- 1.0 (pow (+ (/ i n) 1.0) n)) (/ 20000.0 (* (/ i n) (* (/ i n) (/ -200.0 (/ i n)))))) (/ (fma (pow (+ (/ i n) 1.0) n) 100.0 -100.0) (/ i n))))",
    "output_parens": 37,
    "avg_bits_err_input": 48.219958908061635,
    "avg_bits_err_output": 14.106738164657683,
    "avg_bits_err_improve": 34.11322074340395,
    "time": 28528.838134765625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 5e-271) (* 100.0 (/ (expm1 (* n (log1p (/ i n)))) (/ i n))) (if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 4e-13) (* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n))) (* 100.0 (/ (- (pow (exp n) (log1p (/ i n))) 1.0) (/ i n)))))",
    "output_parens": 38,
    "avg_bits_err_input": 48.219958908061635,
    "avg_bits_err_output": 11.375453759318452,
    "avg_bits_err_improve": 36.84450514874318,
    "time": 52649.046142578125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= n -0.55) (* 100.0 (if (!= (/ 1.0 (/ i n)) 0.0) (- (/ (pow (+ 1.0 (/ i n)) n) (/ (/ (/ (* n n) (/ n i)) (fabs n)) (fabs n))) (/ 1.0 (/ 1.0 (/ 1.0 (/ i n))))) (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n)))) (if (<= n 3.1e+147) (* 100.0 (if (!= (/ 1.0 (/ i n)) 0.0) (- (/ (pow (+ 1.0 (/ i n)) n) (/ i (expm1 (log1p (/ i (/ i n)))))) (/ 1.0 (/ 1.0 (/ 1.0 (/ i n))))) (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n)))) (* 100.0 (if (!= (/ 1.0 (/ i n)) 0.0) (- (/ (pow (+ 1.0 (/ i n)) n) (/ (/ (/ (* n n) (/ n i)) (fabs n)) (fabs n))) (/ 1.0 (/ 1.0 (/ 1.0 (/ i n))))) (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n))))))",
    "output_parens": 83,
    "avg_bits_err_input": 48.219958908061635,
    "avg_bits_err_output": 44.12502264840107,
    "avg_bits_err_improve": 4.094936259660564,
    "time": 31190.918701171875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 5e-271) (* 100.0 (/ (expm1 (* n (log1p (/ i n)))) (/ i n))) (if (!= (/ 100.0 (/ i n)) 0.0) (- (/ (* (* (pow (+ (/ i n) 1.0) n) (/ 100.0 (/ i n))) (* 100.0 (/ i i))) 100.0) (/ (/ 10000.0 (/ i n)) 100.0)) 0.0))",
    "output_parens": 33,
    "avg_bits_err_input": 48.219958908061635,
    "avg_bits_err_output": 11.191793682895366,
    "avg_bits_err_improve": 37.02816522516627,
    "time": 28848.884033203125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n)) 5e-271) (* 100.0 (/ (expm1 (* n (log1p (/ i n)))) (/ i n))) (if (<= (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n)) 4e-13) (* 100.0 (* (/ n i) (+ (pow (+ 1.0 (/ i n)) n) -1.0))) (* n (/ (+ (* 100.0 (pow (exp n) (log1p (/ i n)))) -100.0) i))))",
    "output_parens": 38,
    "avg_bits_err_input": 48.219958908061635,
    "avg_bits_err_output": 11.156407900681817,
    "avg_bits_err_improve": 37.063551007379814,
    "time": 33793.6298828125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 0.0) (* 100.0 (/ (expm1 (* n (log1p (/ i n)))) (/ i n))) (* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n))))",
    "output_parens": 22,
    "avg_bits_err_input": 47.8415147810946,
    "avg_bits_err_output": 14.167216306298121,
    "avg_bits_err_improve": 33.67429847479648,
    "time": 26603.23095703125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 0.0) (* 100.0 (/ (expm1 (* n (log1p (/ i n)))) (/ i n))) (if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 0.2) (* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n))) (* 100.0 (/ (- (pow (exp n) (log1p (/ i n))) 1.0) (/ i n)))))",
    "output_parens": 38,
    "avg_bits_err_input": 47.8415147810946,
    "avg_bits_err_output": 11.138698914123015,
    "avg_bits_err_improve": 36.70281586697159,
    "time": 54298.755859375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= i -6.8e+109) (* 100.0 (if (!= (/ 1.0 (/ i n)) 0.0) (- (/ (/ (pow (+ 1.0 (/ i n)) n) (/ (log1p (expm1 (* i (/ i n)))) n)) (/ 1.0 (/ i n))) (/ 1.0 (/ 1.0 (/ 1.0 (/ i n))))) (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n)))) (- (if (!= (* (pow (+ 1.0 (/ i n)) n) (/ 100.0 (/ i n))) 0.0) (/ 1.0 (/ 1.0 (* (pow (+ 1.0 (/ i n)) n) (/ 100.0 (/ i n))))) (* (pow (+ 1.0 (/ i n)) n) (/ 100.0 (/ i n)))) (/ 100.0 (/ i n))))",
    "output_parens": 55,
    "avg_bits_err_input": 47.8415147810946,
    "avg_bits_err_output": 47.20374911941436,
    "avg_bits_err_improve": 0.6377656616802412,
    "time": 28925.7744140625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 0.0) (* 100.0 (/ (expm1 (* n (log1p (/ i n)))) (/ i n))) (/ (* (- 1.0 (pow (+ (/ i n) 1.0) n)) (/ -200.0 (/ i n))) (* i (/ 2.0 i))))",
    "output_parens": 25,
    "avg_bits_err_input": 47.8415147810946,
    "avg_bits_err_output": 14.170887195250701,
    "avg_bits_err_improve": 33.6706275858439,
    "time": 27382.197265625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n)) 0.0) (* 100.0 (/ (expm1 (* n (log1p (/ i n)))) (/ i n))) (if (<= (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n)) 0.2) (* 100.0 (* (/ n i) (+ (pow (+ 1.0 (/ i n)) n) -1.0))) (* 100.0 (/ (+ -1.0 (pow (exp n) (log1p (/ i n)))) (/ i n)))))",
    "output_parens": 38,
    "avg_bits_err_input": 47.8415147810946,
    "avg_bits_err_output": 11.135210283832567,
    "avg_bits_err_improve": 36.70630449726204,
    "time": 31066.057373046875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 0.0) (* 100.0 (/ (expm1 (* n (log1p (/ i n)))) (/ i n))) (* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n))))",
    "output_parens": 22,
    "avg_bits_err_input": 47.41160314990244,
    "avg_bits_err_output": 13.656201745395654,
    "avg_bits_err_improve": 33.755401404506785,
    "time": 24825.564697265625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 0.0) (* 100.0 (/ (expm1 (* n (log1p (/ i n)))) (/ i n))) (if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 1e-26) (* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n))) (* 100.0 (/ (- (pow (exp n) (log1p (/ i n))) 1.0) (/ i n)))))",
    "output_parens": 38,
    "avg_bits_err_input": 47.41160314990244,
    "avg_bits_err_output": 10.928665111584927,
    "avg_bits_err_improve": 36.48293803831751,
    "time": 44738.19970703125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= n -5e+118) (* 100.0 (if (!= (/ 1.0 (/ i n)) 0.0) (- (/ (pow (+ 1.0 (/ i n)) n) (/ (log1p (expm1 (* i (/ i i)))) n)) (/ 1.0 (/ 1.0 (/ 1.0 (/ i n))))) (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n)))) (if (<= n 5e+16) (* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n))) (* 100.0 (if (!= (/ 1.0 (/ i n)) 0.0) (- (/ (pow (+ 1.0 (/ i n)) n) (/ (log1p (expm1 (* i (/ i i)))) n)) (/ 1.0 (/ 1.0 (/ 1.0 (/ i n))))) (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n))))))",
    "output_parens": 61,
    "avg_bits_err_input": 47.41160314990244,
    "avg_bits_err_output": 42.965929107301285,
    "avg_bits_err_improve": 4.445674042601155,
    "time": 28366.330322265625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 0.0) (* 100.0 (/ (expm1 (* n (log1p (/ i n)))) (/ i n))) (* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n))))",
    "output_parens": 22,
    "avg_bits_err_input": 47.41160314990244,
    "avg_bits_err_output": 13.656201745395654,
    "avg_bits_err_improve": 33.755401404506785,
    "time": 25123.863525390625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n)) 0.0) (* 100.0 (/ (expm1 (* n (log1p (/ i n)))) (/ i n))) (if (<= (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n)) 1e-10) (* (* n (/ 100.0 i)) (+ (pow (+ 1.0 (/ i n)) n) -1.0)) (* n (/ (+ (* 100.0 (pow (exp n) (log1p (/ i n)))) -100.0) i))))",
    "output_parens": 38,
    "avg_bits_err_input": 47.41160314990244,
    "avg_bits_err_output": 10.490226796404343,
    "avg_bits_err_improve": 36.9213763534981,
    "time": 32587.572265625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(if (!= (+ 1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))) 0.0) (/ (if (!= (+ 0.5 (/ 0.5 (hypot 1.0 x))) 0.0) (/ (if (!= (+ 0.25 (/ 0.25 (fma x x 1.0))) 0.0) (/ (- 0.0625 (/ 0.0625 (pow (fma x x 1.0) 2.0))) (+ 0.25 (/ 0.25 (fma x x 1.0)))) (+ 0.25 (/ -0.25 (fma x x 1.0)))) (+ 0.5 (/ 0.5 (hypot 1.0 x)))) (+ 0.5 (/ -0.5 (hypot 1.0 x)))) (+ 1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))))) (- 1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))))",
    "output_parens": 46,
    "avg_bits_err_input": 15.391789417137355,
    "avg_bits_err_output": 14.885256612988892,
    "avg_bits_err_improve": 0.5065328041484634,
    "time": 27167.810302734375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(exp (log (- 1.0 (sqrt (fma 0.5 (/ 1.0 (hypot 1.0 x)) 0.5)))))",
    "output_parens": 7,
    "avg_bits_err_input": 15.391789417137355,
    "avg_bits_err_output": 15.393227576323463,
    "avg_bits_err_improve": -0.0014381591861081233,
    "time": 19916.685302734375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(- 1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))))",
    "output_parens": 5,
    "avg_bits_err_input": 15.391789417137355,
    "avg_bits_err_output": 15.391789417137355,
    "avg_bits_err_improve": 0,
    "time": 12049.19287109375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(if (!= (+ 1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))) 0.0) (/ (if (!= (- -0.5 (/ 0.5 (hypot 1.0 x))) 0.0) (/ (if (!= (+ 0.25 (/ 0.25 (* (hypot 1.0 x) (hypot 1.0 x)))) 0.0) (/ (if (!= (+ 0.0625 (/ (/ 0.0625 (* (hypot 1.0 x) (hypot 1.0 x))) (* (hypot 1.0 x) (hypot 1.0 x)))) 0.0) (/ (- 0.00390625 (/ 0.00390625 (* (hypot 1.0 x) (* (* (hypot 1.0 x) (* (hypot 1.0 x) (* (hypot 1.0 x) (hypot 1.0 x)))) (* (hypot 1.0 x) (* (hypot 1.0 x) (hypot 1.0 x))))))) (+ 0.0625 (/ (/ 0.0625 (* (hypot 1.0 x) (hypot 1.0 x))) (* (hypot 1.0 x) (hypot 1.0 x))))) (+ 0.0625 (/ -0.0625 (* (hypot 1.0 x) (* (hypot 1.0 x) (* (hypot 1.0 x) (hypot 1.0 x))))))) (+ 0.25 (/ 0.25 (* (hypot 1.0 x) (hypot 1.0 x))))) (+ 0.25 (/ -0.25 (* (hypot 1.0 x) (hypot 1.0 x))))) (+ 0.5 (/ 0.5 (hypot 1.0 x)))) (+ 0.5 (/ -0.5 (hypot 1.0 x)))) (+ 1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))))) (- 1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))))",
    "output_parens": 95,
    "avg_bits_err_input": 15.391789417137355,
    "avg_bits_err_output": 14.904223951222715,
    "avg_bits_err_improve": 0.48756546591464023,
    "time": 17132.33251953125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(/ (/ (- (+ (pow (+ 0.5 (/ 0.5 (hypot 1.0 x))) 1.5) (- 1.0 (pow (+ 0.5 (/ 0.5 (hypot 1.0 x))) 3.0))) (pow (+ 0.5 (/ 0.5 (hypot 1.0 x))) 4.5)) (pow (+ 1.0 (pow (+ 0.5 (/ 0.5 (hypot 1.0 x))) 1.5)) 2.0)) (+ 1.5 (+ (/ 0.5 (hypot 1.0 x)) (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))))))",
    "output_parens": 31,
    "avg_bits_err_input": 15.391789417137355,
    "avg_bits_err_output": 14.918597565851291,
    "avg_bits_err_improve": 0.4731918512860638,
    "time": 38181.851318359375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(if (!= (+ 1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))) 0.0) (/ (if (!= (/ -0.25 (hypot 1.0 x)) 0.0) (/ (+ (/ 0.0625 (fma x x 1.0)) (* (/ -0.25 (hypot 1.0 x)) (+ 0.5 (/ -0.25 (hypot 1.0 x))))) (/ -0.25 (hypot 1.0 x))) (+ 0.5 (/ -0.5 (hypot 1.0 x)))) (+ 1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))))) (- 1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))))",
    "output_parens": 37,
    "avg_bits_err_input": 15.009825039194446,
    "avg_bits_err_output": 14.48756497794536,
    "avg_bits_err_improve": 0.5222600612490869,
    "time": 26898.151123046875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(- (+ 1.0 (- (pow (- 1.0 (sqrt (fma 0.5 (/ 1.0 (hypot 1.0 x)) 0.5))) 2.0) (sqrt (fma 0.5 (/ 1.0 (hypot 1.0 x)) 0.5)))) (pow (- 1.0 (sqrt (fma 0.5 (/ 1.0 (hypot 1.0 x)) 0.5))) 2.0))",
    "output_parens": 19,
    "avg_bits_err_input": 15.009825039194446,
    "avg_bits_err_output": 14.527143455916807,
    "avg_bits_err_improve": 0.482681583277639,
    "time": 193173.63110351562,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(if (!= (+ 1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))) 0.0) (/ (log (+ 1.0 (expm1 (fma (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))) (sqrt (+ 0.5 (log1p (expm1 (/ 0.5 (hypot 1.0 x)))))) -1.0)))) (- -1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))))) (- 1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))))",
    "output_parens": 32,
    "avg_bits_err_input": 15.009825039194446,
    "avg_bits_err_output": 14.53070234650946,
    "avg_bits_err_improve": 0.479122692684987,
    "time": 20185.761962890625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(if (!= (+ 1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))) 0.0) (/ (+ 0.5 (log1p (expm1 (/ -0.5 (hypot 1.0 x))))) (+ 1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))))) (- 1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))))",
    "output_parens": 23,
    "avg_bits_err_input": 15.009825039194446,
    "avg_bits_err_output": 14.503274644823573,
    "avg_bits_err_improve": 0.5065503943708727,
    "time": 17428.334228515625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(/ (/ (/ (/ (+ (* (pow (/ -0.25 (fma x x 1.0)) 6.0) (pow (+ -0.25 (/ -0.25 (fma x x 1.0))) 2.0)) (* (pow (+ -0.25 (/ -0.25 (fma x x 1.0))) 3.0) (/ -0.000244140625 (+ -0.25 (/ -0.25 (fma x x 1.0)))))) (* (pow (+ -0.25 (/ -0.25 (fma x x 1.0))) 2.0) (pow (+ -0.25 (/ -0.25 (fma x x 1.0))) 3.0))) (fma (/ -0.0625 (+ -0.25 (/ -0.25 (fma x x 1.0)))) (/ -0.0625 (+ -0.25 (/ -0.25 (fma x x 1.0)))) (* (/ (pow (* (fma x x 1.0) 4.0) -2.0) (+ 0.25 (/ 0.25 (fma x x 1.0)))) (+ (/ -0.0625 (+ -0.25 (/ -0.25 (fma x x 1.0)))) (/ (pow (* (fma x x 1.0) 4.0) -2.0) (+ 0.25 (/ 0.25 (fma x x 1.0)))))))) (+ 0.5 (/ 0.5 (hypot 1.0 x)))) (+ 1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))))",
    "output_parens": 68,
    "avg_bits_err_input": 15.009825039194446,
    "avg_bits_err_output": 14.484388234252371,
    "avg_bits_err_improve": 0.5254368049420748,
    "time": 66471.4990234375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(if (!= (+ 1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))) 0.0) (/ (/ (if (!= (- -1.0 (hypot 1.0 x)) 0.0) (* x (/ x (+ 1.0 (hypot 1.0 x)))) (+ (hypot 1.0 x) -1.0)) (* (hypot 1.0 x) 2.0)) (+ 1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))))) (- 1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))))",
    "output_parens": 31,
    "avg_bits_err_input": 15.501832345748937,
    "avg_bits_err_output": 0.04491842858894981,
    "avg_bits_err_improve": 15.456913917159987,
    "time": 27242.615966796875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(* (- (* (exp 1.0) (- 2.0 (sqrt (fma 0.5 (/ 1.0 (hypot 1.0 x)) 0.5)))) (exp 1.0)) (exp -1.0))",
    "output_parens": 11,
    "avg_bits_err_input": 15.501832345748937,
    "avg_bits_err_output": 15.062913972494522,
    "avg_bits_err_improve": 0.4389183732544151,
    "time": 106583.77099609375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(if (!= (+ 1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))) 0.0) (/ (fma (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))) (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))) -1.0) (log1p (expm1 (- -1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))))))) (- 1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))))",
    "output_parens": 29,
    "avg_bits_err_input": 15.501832345748937,
    "avg_bits_err_output": 15.037533555914509,
    "avg_bits_err_improve": 0.4642987898344284,
    "time": 22277,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(if (!= (+ 1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))) 0.0) (/ (if (!= (/ -0.5 (hypot 1.0 x)) 0.0) (/ (+ (/ -0.25 (hypot 1.0 x)) (/ (/ 0.25 (hypot 1.0 x)) (hypot 1.0 x))) (/ -0.5 (hypot 1.0 x))) (+ 0.5 (/ -0.5 (hypot 1.0 x)))) (+ 1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))))) (- 1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))))",
    "output_parens": 35,
    "avg_bits_err_input": 15.501832345748937,
    "avg_bits_err_output": 15.013476330569747,
    "avg_bits_err_improve": 0.4883560151791908,
    "time": 20965.35986328125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(* (/ (pow (pow (+ (/ 0.0625 (+ 0.25 (/ 0.25 (fma x x 1.0)))) (/ -0.0625 (* (+ 0.25 (/ 0.25 (fma x x 1.0))) (pow (fma x x 1.0) 2.0)))) 3.0) 0.3333333333333333) (+ 0.5 (/ 0.5 (hypot 1.0 x)))) (/ 1.0 (+ 1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))))))",
    "output_parens": 25,
    "avg_bits_err_input": 15.501832345748937,
    "avg_bits_err_output": 15.002630218176037,
    "avg_bits_err_improve": 0.49920212757290017,
    "time": 35119.4140625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(log1p (if (!= (sqrt (/ (- -1.0 x) (- x 1.0))) 0.0) (- (/ (- (/ -1.0 (+ -1.0 x)) (sqrt (/ (+ x 1.0) (- 1.0 x)))) (sqrt (/ (+ x 1.0) (- 1.0 x)))) (/ x (* (+ -1.0 x) (sqrt (/ (+ x 1.0) (- 1.0 x)))))) (+ -1.0 (sqrt (/ (- -1.0 x) (- x 1.0))))))",
    "output_parens": 32,
    "avg_bits_err_input": 58.7038449870256,
    "avg_bits_err_output": 0.8362502416339747,
    "avg_bits_err_improve": 57.86759474539162,
    "time": 19497.099365234375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(fma (/ 0.5 (log (* (/ (+ x 1.0) (- 1.0 x)) (exp 1.0)))) (pow (log (* (/ (+ x 1.0) (- 1.0 x)) (exp 1.0))) 2.0) -0.5)",
    "output_parens": 15,
    "avg_bits_err_input": 58.7038449870256,
    "avg_bits_err_output": 58.73728884690224,
    "avg_bits_err_improve": -0.03344385987664111,
    "time": 59011.083984375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (log1p (/ x (/ (- 1.0 x) 2.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 58.7038449870256,
    "avg_bits_err_output": 0.014771240625180291,
    "avg_bits_err_improve": 58.68907374640042,
    "time": 12241.794677734375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (log1p (/ x (/ (- 1.0 x) 2.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 58.7038449870256,
    "avg_bits_err_output": 0.014771240625180291,
    "avg_bits_err_improve": 58.68907374640042,
    "time": 13684.40478515625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (- (log1p x) (log1p (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 58.7038449870256,
    "avg_bits_err_output": 0.00575,
    "avg_bits_err_improve": 58.6980949870256,
    "time": 22319.520751953125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(/ (log (if (!= (/ x (- 1.0 x)) 0.0) (/ (- (* (/ x (- 1.0 x)) (/ x (- 1.0 x))) (/ x (* (+ -1.0 x) (- 1.0 x)))) (/ x (- 1.0 x))) (/ (- -1.0 x) (+ -1.0 x)))) 2.0)",
    "output_parens": 22,
    "avg_bits_err_input": 58.766096294650104,
    "avg_bits_err_output": 58.78524509592732,
    "avg_bits_err_improve": -0.019148801277218297,
    "time": 17574.987548828125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* (log1p (fma (/ 1.0 (/ (+ 1.0 x) (- 1.0 x))) (pow (/ (+ 1.0 x) (- 1.0 x)) 2.0) -1.0)) 0.5)",
    "output_parens": 11,
    "avg_bits_err_input": 58.766096294650104,
    "avg_bits_err_output": 58.7777036840993,
    "avg_bits_err_improve": -0.011607389449196148,
    "time": 69260.59838867188,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (log1p (/ x (/ (+ x -1.0) -2.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 58.766096294650104,
    "avg_bits_err_output": 0.015969360937770433,
    "avg_bits_err_improve": 58.75012693371234,
    "time": 15737.405029296875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (log1p (/ x (/ (+ x -1.0) -2.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 58.766096294650104,
    "avg_bits_err_output": 0.015969360937770433,
    "avg_bits_err_improve": 58.75012693371234,
    "time": 16439.71875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (- (log1p x) (log1p (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 58.766096294650104,
    "avg_bits_err_output": 0.006125,
    "avg_bits_err_improve": 58.75997129465011,
    "time": 17992.243896484375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(/ (- (exp (log1p (log (/ (- -1.0 x) (+ -1.0 x))))) 1.0) 2.0)",
    "output_parens": 8,
    "avg_bits_err_input": 58.73486940753129,
    "avg_bits_err_output": 58.753162033946296,
    "avg_bits_err_improve": -0.018292626415004065,
    "time": 22977.874755859375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(fma (/ 0.5 (+ 1.0 (log (/ (+ 1.0 x) (- 1.0 x))))) (* (log (/ (+ 1.0 x) (- 1.0 x))) (+ 1.0 (log (/ (+ 1.0 x) (- 1.0 x))))) (fma (+ 1.0 (log (/ (+ 1.0 x) (- 1.0 x)))) (log1p (expm1 (/ 0.5 (+ 1.0 (log (/ (- x -1.0) (- 1.0 x))))))) -0.5))",
    "output_parens": 31,
    "avg_bits_err_input": 58.73486940753129,
    "avg_bits_err_output": 58.76118164108617,
    "avg_bits_err_improve": -0.026312233554875775,
    "time": 58408.339111328125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (log1p (/ x (/ (- 1.0 x) 2.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 58.73486940753129,
    "avg_bits_err_output": 0.015823120312590144,
    "avg_bits_err_improve": 58.7190462872187,
    "time": 16892.61962890625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (log1p (/ x (/ (- 1.0 x) 2.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 58.73486940753129,
    "avg_bits_err_output": 0.015823120312590144,
    "avg_bits_err_improve": 58.7190462872187,
    "time": 17458.202392578125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (- (* (log1p x) 2.0) (log1p (* x (- x)))))",
    "output_parens": 7,
    "avg_bits_err_input": 58.73486940753129,
    "avg_bits_err_output": 0.0073231203125901445,
    "avg_bits_err_improve": 58.7275462872187,
    "time": 19642.94970703125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (if (!= (- -2.0 (log (/ (- -1.0 x) (- x 1.0)))) 0.0) (+ (+ (/ (pow (+ (log (/ (- -1.0 x) (- x 1.0))) 1.0) 2.0) (+ (fma (log (/ (- -1.0 x) (- x 1.0))) 2.0 4.0) (fma (log (/ (- -1.0 x) (- x 1.0))) 2.0 4.0))) 0.0) (- (/ (pow (+ (log (/ (- -1.0 x) (- x 1.0))) 1.0) 2.0) (+ (fma (log (/ (- -1.0 x) (- x 1.0))) 2.0 4.0) (fma (log (/ (- -1.0 x) (- x 1.0))) 2.0 4.0))) (/ (- 2.0 (pow (+ (log (/ (- -1.0 x) (- x 1.0))) 1.0) 2.0)) (fma (log (/ (- -1.0 x) (- x 1.0))) 2.0 4.0)))) (log (/ (- -1.0 x) (- x 1.0)))))",
    "output_parens": 64,
    "avg_bits_err_input": 58.57730135833719,
    "avg_bits_err_output": 58.57782980623469,
    "avg_bits_err_improve": -0.000528447897501394,
    "time": 31246.74267578125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(+ (* (+ 1.0 (log (/ (+ 1.0 x) (- 1.0 x)))) (- 0.5 (/ 0.5 (+ 1.0 (log (/ (+ 1.0 x) (- 1.0 x))))))) (- (* (+ 1.0 (log (/ (+ 1.0 x) (- 1.0 x)))) (/ 0.5 (+ 1.0 (log (/ (+ 1.0 x) (- 1.0 x)))))) 0.5))",
    "output_parens": 27,
    "avg_bits_err_input": 58.57730135833719,
    "avg_bits_err_output": 58.58823863212918,
    "avg_bits_err_improve": -0.010937273791995494,
    "time": 85081.63842773438,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (log (if (!= (/ x (- 1.0 x)) 0.0) (/ (* (/ (- -1.0 x) (+ x -1.0)) (/ x (- 1.0 x))) (/ x (- 1.0 x))) (/ (- -1.0 x) (+ x -1.0)))))",
    "output_parens": 18,
    "avg_bits_err_input": 58.57730135833719,
    "avg_bits_err_output": 58.583991478371566,
    "avg_bits_err_improve": -0.0066901200343778555,
    "time": 21273.502685546875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (log (if (!= (/ x (- 1.0 x)) 0.0) (/ (* (/ (- -1.0 x) (+ x -1.0)) (/ x (- 1.0 x))) (/ x (- 1.0 x))) (/ (- -1.0 x) (+ x -1.0)))))",
    "output_parens": 18,
    "avg_bits_err_input": 58.57730135833719,
    "avg_bits_err_output": 58.583991478371566,
    "avg_bits_err_improve": -0.0066901200343778555,
    "time": 21906.086669921875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (- (log1p x) (log1p (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 58.57730135833719,
    "avg_bits_err_output": 0.007125,
    "avg_bits_err_improve": 58.570176358337186,
    "time": 12761.985107421875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (- (exp (log1p (log (- (/ x (- 1.0 x)) (/ -1.0 (- 1.0 x)))))) 1.0))",
    "output_parens": 10,
    "avg_bits_err_input": 58.4959460051333,
    "avg_bits_err_output": 58.53042799195972,
    "avg_bits_err_improve": -0.03448198682642101,
    "time": 24005.779541015625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(- (* (+ 1.0 (log (/ (+ x 1.0) (- 1.0 x)))) 0.5) 0.5)",
    "output_parens": 7,
    "avg_bits_err_input": 58.4959460051333,
    "avg_bits_err_output": 58.500931898743715,
    "avg_bits_err_improve": -0.004985893610417236,
    "time": 52014.47802734375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (log1p (/ x (/ (+ x -1.0) -2.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 58.4959460051333,
    "avg_bits_err_output": 0.01854248125036058,
    "avg_bits_err_improve": 58.477403523882934,
    "time": 16782.05517578125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (log1p (/ x (/ (+ x -1.0) -2.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 58.4959460051333,
    "avg_bits_err_output": 0.01854248125036058,
    "avg_bits_err_improve": 58.477403523882934,
    "time": 16003.548095703125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (- (log1p x) (log1p (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 58.4959460051333,
    "avg_bits_err_output": 0.007625,
    "avg_bits_err_improve": 58.4883210051333,
    "time": 10813.285400390625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(log (- (+ (expm1 (+ -1.0 (/ 2.0 (+ 2.0 (expm1 (* -2.0 x)))))) 2.0) 1.0))",
    "output_parens": 9,
    "avg_bits_err_input": 29.374745308290716,
    "avg_bits_err_output": 29.38734852521859,
    "avg_bits_err_improve": -0.012603216927875138,
    "time": 18910.543212890625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(- (+ 1.0 (log (* (exp (/ 2.0 (+ 1.0 (exp (* -2.0 x))))) (exp -1.0)))) 1.0)",
    "output_parens": 10,
    "avg_bits_err_input": 29.374745308290716,
    "avg_bits_err_output": 29.379070462161362,
    "avg_bits_err_improve": -0.004325153870645693,
    "time": 22555.90869140625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(if (!= (+ 1.0 (/ 2.0 (+ 1.0 (exp (* -2.0 x))))) 0.0) (/ (if (!= (+ 1.0 (/ 4.0 (* (+ 1.0 (exp (* -2.0 x))) (+ 1.0 (exp (* -2.0 x)))))) 0.0) (/ (- 1.0 (/ (/ (/ 16.0 (+ 1.0 (exp (* -2.0 x)))) (* (+ 1.0 (exp (* -2.0 x))) (+ 1.0 (exp (* -2.0 x))))) (+ 1.0 (exp (* -2.0 x))))) (+ 1.0 (/ 4.0 (* (+ 1.0 (exp (* -2.0 x))) (+ 1.0 (exp (* -2.0 x))))))) (+ 1.0 (/ -4.0 (* (+ 1.0 (exp (* -2.0 x))) (+ 1.0 (exp (* -2.0 x))))))) (+ -1.0 (/ 2.0 (- -1.0 (exp (* -2.0 x)))))) (+ (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) -1.0))",
    "output_parens": 65,
    "avg_bits_err_input": 29.374745308290716,
    "avg_bits_err_output": 29.370627723243082,
    "avg_bits_err_improve": 0.004117585047634265,
    "time": 24826.027587890625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(if (!= (+ 1.0 (/ 2.0 (+ 1.0 (exp (* -2.0 x))))) 0.0) (/ (if (!= (+ 1.0 (/ 4.0 (+ 1.0 (fma 2.0 (exp (* -2.0 x)) (exp (* x -4.0)))))) 0.0) (/ (- 1.0 (/ 16.0 (* (+ 1.0 (fma 2.0 (exp (* -2.0 x)) (exp (* x -4.0)))) (+ 1.0 (fma 2.0 (exp (* -2.0 x)) (exp (* x -4.0))))))) (+ 1.0 (/ 4.0 (+ 1.0 (fma 2.0 (exp (* -2.0 x)) (exp (* x -4.0))))))) (- 1.0 (/ 4.0 (+ 1.0 (fma 2.0 (exp (* -2.0 x)) (exp (* x -4.0))))))) (+ -1.0 (/ 2.0 (- -1.0 (exp (* -2.0 x)))))) (+ (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) -1.0))",
    "output_parens": 60,
    "avg_bits_err_input": 29.374745308290716,
    "avg_bits_err_output": 29.32130992450407,
    "avg_bits_err_improve": 0.053435383786645474,
    "time": 25418.710205078125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(/ (+ (/ 512.0 (pow (* (pow (+ 1.0 (pow (exp -2.0) x)) 3.0) (+ 1.0 (fma 4.0 (pow (+ 1.0 (pow (exp -2.0) x)) -2.0) (/ -2.0 (- -1.0 (pow (exp -2.0) x)))))) 3.0)) (/ -1.0 (pow (+ 1.0 (fma 4.0 (pow (+ 1.0 (pow (exp -2.0) x)) -2.0) (/ -2.0 (- -1.0 (pow (exp -2.0) x))))) 3.0))) (+ (* (pow (/ -2.0 (- -1.0 (pow (exp -2.0) x))) 3.0) (* (pow (/ -2.0 (- -1.0 (pow (exp -2.0) x))) 3.0) (pow (/ 1.0 (+ 1.0 (fma 4.0 (pow (+ 1.0 (pow (exp -2.0) x)) -2.0) (/ -2.0 (- -1.0 (pow (exp -2.0) x)))))) 2.0))) (cbrt (pow (* (pow (+ 1.0 (fma 4.0 (pow (+ 1.0 (pow (exp -2.0) x)) -2.0) (/ -2.0 (- -1.0 (pow (exp -2.0) x))))) -2.0) (+ 1.0 (/ -8.0 (pow (- -1.0 (pow (exp -2.0) x)) 3.0)))) 3.0))))",
    "output_parens": 76,
    "avg_bits_err_input": 29.374745308290716,
    "avg_bits_err_output": 29.361810112130552,
    "avg_bits_err_improve": 0.012935196160164253,
    "time": 56847.23681640625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (if (!= (- (sqrt (fma b b (* (* a c) -4.0))) b) 0.0) (fma a (/ (* c 4.0) (- (sqrt (fma a (* c -4.0) (* b b))) b)) 0.0) (- (- b) (sqrt (fma b b (* (* a c) -4.0))))) (* a 2.0))",
    "output_parens": 23,
    "avg_bits_err_input": 33.85652725117812,
    "avg_bits_err_output": 21.930902570824657,
    "avg_bits_err_improve": 11.925624680353465,
    "time": 26352.8544921875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (+ (* c (* (/ 1.0 (sqrt (fma a (* c -4.0) (* b b)))) (* a 4.0))) (- (* b (* (/ 1.0 (sqrt (fma a (* c -4.0) (* b b)))) (- b))) b)) (+ a a))",
    "output_parens": 20,
    "avg_bits_err_input": 33.85652725117812,
    "avg_bits_err_output": 31.85545697384997,
    "avg_bits_err_improve": 2.00107027732815,
    "time": 45797.137451171875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (/ (+ b (sqrt (if (!= (- (* c (* a -4.0)) (* b b)) 0.0) (fma c (* (* a 16.0) (* a (/ c (- (* a (* c -4.0)) (* b b))))) (* (* b b) (/ (* b b) (- (* b b) (* a (* c -4.0)))))) (fma c (* a -4.0) (* b b))))) -2.0) a)",
    "output_parens": 30,
    "avg_bits_err_input": 33.85652725117812,
    "avg_bits_err_output": 33.72854510259447,
    "avg_bits_err_improve": 0.12798214858365498,
    "time": 27001.649169921875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(* (if (!= (- (sqrt (fma -4.0 (* c a) (* b b))) b) 0.0) (* (/ (* c -4.0) (- (sqrt (fma a (* c -4.0) (* b b))) b)) a) (+ b (sqrt (fma -4.0 (* c a) (* b b))))) (/ -0.5 a))",
    "output_parens": 22,
    "avg_bits_err_input": 33.85652725117812,
    "avg_bits_err_output": 22.02032485589742,
    "avg_bits_err_improve": 11.8362023952807,
    "time": 24334.414306640625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(if (<= (/ (- (- b) (sqrt (+ (* b b) (* (* a c) -4.0)))) (* a 2.0)) (- INFINITY)) (* -0.5 (/ (+ b (hypot (* (sqrt (* c -4.0)) (sqrt a)) b)) a)) (if (<= (/ (- (- b) (sqrt (+ (* b b) (* (* a c) -4.0)))) (* a 2.0)) 1e+246) (* -0.5 (/ (+ b (sqrt (fma b b (* a (* c -4.0))))) a)) (* -0.5 (/ (+ b (hypot (* (sqrt (* a -4.0)) (sqrt c)) b)) a))))",
    "output_parens": 46,
    "avg_bits_err_input": 33.85652725117812,
    "avg_bits_err_output": 23.542221856748164,
    "avg_bits_err_improve": 10.314305394429958,
    "time": 38691.69921875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (/ (* Om (/ Om Omc)) Omc)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 11,
    "avg_bits_err_input": 10.166034271136256,
    "avg_bits_err_output": 10.165784271136255,
    "avg_bits_err_improve": 0.0002500000000011937,
    "time": 21018.441162109375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (- (- (/ 1.0 (fma 2.0 (pow (/ t l) 2.0) 1.0)) (/ (pow (/ Om Omc) 2.0) (+ 2.0 (* (pow (/ t l) 2.0) 4.0)))) (/ (pow (/ Om Omc) 2.0) (+ 2.0 (* (pow (/ t l) 2.0) 4.0))))))",
    "output_parens": 22,
    "avg_bits_err_input": 10.166034271136256,
    "avg_bits_err_output": 10.166222801986855,
    "avg_bits_err_improve": -0.00018853085059866714,
    "time": 22125.775146484375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (- (- (/ 1.0 (fma 2.0 (pow (/ t l) 2.0) 1.0)) (/ (pow (/ Om Omc) 2.0) (+ 2.0 (* (pow (/ t l) 2.0) 4.0)))) (/ (pow (/ Om Omc) 2.0) (+ 2.0 (* (pow (/ t l) 2.0) 4.0))))))",
    "output_parens": 22,
    "avg_bits_err_input": 10.166034271136256,
    "avg_bits_err_output": 10.166222801986855,
    "avg_bits_err_improve": -0.00018853085059866714,
    "time": 27936.185546875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (/ (sqrt (- 1.0 (/ (* (/ Om Omc) (* Om (/ Om Omc))) (* Omc (/ Omc Om))))) (* (hypot 1.0 (* (/ t l) (sqrt 2.0))) (hypot 1.0 (/ Om Omc)))))",
    "output_parens": 18,
    "avg_bits_err_input": 10.166034271136256,
    "avg_bits_err_output": 0.9710843591405034,
    "avg_bits_err_improve": 9.194949911995753,
    "time": 24642.68359375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (+ (/ (pow (/ Om Omc) 2.0) (- -1.0 (* 2.0 (pow (/ t l) 2.0)))) (/ -1.0 (- -1.0 (* 2.0 (pow (/ t l) 2.0)))))))",
    "output_parens": 15,
    "avg_bits_err_input": 10.191200829976648,
    "avg_bits_err_output": 10.191366070988506,
    "avg_bits_err_improve": -0.0001652410118584413,
    "time": 24796.662353515625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (* (/ t l) (/ t l)))))))",
    "output_parens": 11,
    "avg_bits_err_input": 10.191200829976648,
    "avg_bits_err_output": 10.191075829976647,
    "avg_bits_err_improve": 0.00012500000000059686,
    "time": 15939.56005859375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (- (/ 1.0 (fma 2.0 (pow (/ t l) 2.0) 1.0)) (/ (pow (/ Om Omc) 2.0) (fma 2.0 (pow (/ t l) 2.0) 1.0)))))",
    "output_parens": 13,
    "avg_bits_err_input": 10.191200829976648,
    "avg_bits_err_output": 10.191366070988506,
    "avg_bits_err_improve": -0.0001652410118584413,
    "time": 17470.783935546875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (+ (/ (pow (/ Om Omc) 2.0) (+ -1.0 (* (pow (/ t l) 2.0) -2.0))) (/ -1.0 (+ -1.0 (* (pow (/ t l) 2.0) -2.0))))))",
    "output_parens": 15,
    "avg_bits_err_input": 10.191200829976648,
    "avg_bits_err_output": 10.191366070988506,
    "avg_bits_err_improve": -0.0001652410118584413,
    "time": 17940.303466796875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (/ (sqrt (- 1.0 (/ (/ Om Omc) (/ Omc Om)))) (hypot 1.0 (/ (* t 2.0) (* l (sqrt 2.0))))))",
    "output_parens": 12,
    "avg_bits_err_input": 10.191200829976648,
    "avg_bits_err_output": 1.1374330296309956,
    "avg_bits_err_improve": 9.053767800345652,
    "time": 33268.18896484375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (- -1.0 (+ (- (pow (/ Om Omc) 2.0)) -1.0))) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 13,
    "avg_bits_err_input": 10.01840953910635,
    "avg_bits_err_output": 10.02029340109097,
    "avg_bits_err_improve": -0.0018838619846199833,
    "time": 18351.066162109375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (- -1.0 (- -1.0 (pow (/ Om Omc) 2.0)))) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 12,
    "avg_bits_err_input": 10.01840953910635,
    "avg_bits_err_output": 10.02029340109097,
    "avg_bits_err_improve": -0.0018838619846199833,
    "time": 10400.439208984375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (- (+ 1.0 (pow (/ Om Omc) 2.0)) 1.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 12,
    "avg_bits_err_input": 10.01840953910635,
    "avg_bits_err_output": 10.02029340109097,
    "avg_bits_err_improve": -0.0018838619846199833,
    "time": 12198.74365234375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (/ (sqrt (- 1.0 (/ (/ Om Omc) (/ Omc Om)))) (hypot 1.0 (/ (sqrt 2.0) (/ l t)))))",
    "output_parens": 11,
    "avg_bits_err_input": 10.01840953910635,
    "avg_bits_err_output": 1.0710024803412475,
    "avg_bits_err_improve": 8.947407058765103,
    "time": 29090.0068359375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (log1p (expm1 (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (fma 2.0 (pow (/ t l) 2.0) 1.0))))))",
    "output_parens": 11,
    "avg_bits_err_input": 10.343448877249196,
    "avg_bits_err_output": 10.350066247701694,
    "avg_bits_err_improve": -0.00661737045249744,
    "time": 20277.859375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (* (/ t l) (/ t l)))))))",
    "output_parens": 11,
    "avg_bits_err_input": 10.343448877249196,
    "avg_bits_err_output": 10.343573877249197,
    "avg_bits_err_improve": -0.00012500000000059686,
    "time": 135471.65771484375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (- (/ 1.0 (fma 2.0 (pow (/ t l) 2.0) 1.0)) (/ (pow (/ Om Omc) 2.0) (fma 2.0 (pow (/ t l) 2.0) 1.0)))))",
    "output_parens": 13,
    "avg_bits_err_input": 10.343448877249196,
    "avg_bits_err_output": 10.342948877249198,
    "avg_bits_err_improve": 0.0004999999999988347,
    "time": 17368.958251953125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (+ (/ (pow (/ Om Omc) 2.0) (fma (pow (/ t l) 2.0) -2.0 -1.0)) (/ -2.0 (- -2.0 (* (pow (/ t l) 2.0) 4.0))))))",
    "output_parens": 14,
    "avg_bits_err_input": 10.343448877249196,
    "avg_bits_err_output": 10.35037547922805,
    "avg_bits_err_improve": -0.006926601978854308,
    "time": 23441.93896484375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (/ (sqrt (- 1.0 (/ (/ Om Omc) (/ Omc Om)))) (hypot 1.0 (/ (* t (sqrt 2.0)) l))))",
    "output_parens": 11,
    "avg_bits_err_input": 10.343448877249196,
    "avg_bits_err_output": 1.0884499242343173,
    "avg_bits_err_improve": 9.25499895301488,
    "time": 24817.91796875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (* (/ t l) (/ t l)))))))",
    "output_parens": 11,
    "avg_bits_err_input": 10.079392923555607,
    "avg_bits_err_output": 10.079392923555607,
    "avg_bits_err_improve": 0,
    "time": 28675.1630859375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (* (/ t l) (/ t l)))))))",
    "output_parens": 11,
    "avg_bits_err_input": 10.079392923555607,
    "avg_bits_err_output": 10.079392923555607,
    "avg_bits_err_improve": 0,
    "time": 287352.6701660156,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 10,
    "avg_bits_err_input": 10.079392923555607,
    "avg_bits_err_output": 10.079392923555607,
    "avg_bits_err_improve": 0,
    "time": 37703.396728515625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 10,
    "avg_bits_err_input": 10.079392923555607,
    "avg_bits_err_output": 10.079392923555607,
    "avg_bits_err_improve": 0,
    "time": 31707.806640625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (/ (/ 1.0 (pow (- 1.0 (/ (/ Om Omc) (/ Omc Om))) -0.5)) (hypot 1.0 (* (/ t l) (sqrt 2.0)))))",
    "output_parens": 12,
    "avg_bits_err_input": 10.079392923555607,
    "avg_bits_err_output": 1.0512913063877383,
    "avg_bits_err_improve": 9.02810161716787,
    "time": 29548.957275390625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (/ (* Om (/ Om Omc)) Omc)) (+ 1.0 (* 2.0 (* (/ t l) (/ t l)))))))",
    "output_parens": 12,
    "avg_bits_err_input": 10.389237730312896,
    "avg_bits_err_output": 10.389362730312898,
    "avg_bits_err_improve": -0.0001250000000023732,
    "time": 17897.140625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (* (/ Om Omc) (/ Om Omc))) (+ 1.0 (* 2.0 (* (/ t l) (/ t l)))))))",
    "output_parens": 12,
    "avg_bits_err_input": 10.389237730312896,
    "avg_bits_err_output": 10.389362730312898,
    "avg_bits_err_improve": -0.0001250000000023732,
    "time": 55253.990234375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 10,
    "avg_bits_err_input": 10.389237730312896,
    "avg_bits_err_output": 10.389237730312896,
    "avg_bits_err_improve": 0,
    "time": 11778.7783203125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 10,
    "avg_bits_err_input": 10.389237730312896,
    "avg_bits_err_output": 10.389237730312896,
    "avg_bits_err_improve": 0,
    "time": 9694.36474609375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (/ (sqrt (- 1.0 (/ (/ Om Omc) (/ Omc Om)))) (hypot 1.0 (/ 2.0 (* (/ l t) (sqrt 2.0))))))",
    "output_parens": 12,
    "avg_bits_err_input": 10.389237730312896,
    "avg_bits_err_output": 1.0661059954401872,
    "avg_bits_err_improve": 9.323131734872709,
    "time": 26462.910400390625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (* (/ t l) (/ t l)))))))",
    "output_parens": 11,
    "avg_bits_err_input": 10.300471547290924,
    "avg_bits_err_output": 10.300471547290924,
    "avg_bits_err_improve": 0,
    "time": 19134.291015625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (* (/ t l) (/ t l)))))))",
    "output_parens": 11,
    "avg_bits_err_input": 10.300471547290924,
    "avg_bits_err_output": 10.300471547290924,
    "avg_bits_err_improve": 0,
    "time": 139390.72021484375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 10,
    "avg_bits_err_input": 10.300471547290924,
    "avg_bits_err_output": 10.300471547290924,
    "avg_bits_err_improve": 0,
    "time": 13974.028076171875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 10,
    "avg_bits_err_input": 10.300471547290924,
    "avg_bits_err_output": 10.300471547290924,
    "avg_bits_err_improve": 0,
    "time": 11758.310791015625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (/ (pow (- 1.0 (/ (/ Om Omc) (/ Omc Om))) 0.5) (hypot 1.0 (/ t (/ l (sqrt 2.0))))))",
    "output_parens": 11,
    "avg_bits_err_input": 10.300471547290924,
    "avg_bits_err_output": 1.1343669362960158,
    "avg_bits_err_improve": 9.166104610994907,
    "time": 26206.37890625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (- -1.0 (+ (- (pow (/ Om Omc) 2.0)) -1.0))) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 13,
    "avg_bits_err_input": 10.122000677655011,
    "avg_bits_err_output": 10.12306861262298,
    "avg_bits_err_improve": -0.0010679349679687533,
    "time": 24460.009033203125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (- (+ 1.0 (pow (/ Om Omc) 2.0)) 1.0)) (+ 1.0 (* 2.0 (* (/ t l) (/ t l)))))))",
    "output_parens": 13,
    "avg_bits_err_input": 10.122000677655011,
    "avg_bits_err_output": 10.123193612622979,
    "avg_bits_err_improve": -0.0011929349679675738,
    "time": 45927.426025390625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (- -1.0 (- -1.0 (pow (/ Om Omc) 2.0)))) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 12,
    "avg_bits_err_input": 10.122000677655011,
    "avg_bits_err_output": 10.12306861262298,
    "avg_bits_err_improve": -0.0010679349679687533,
    "time": 25827.75634765625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- (+ 1.0 (pow (/ Om Omc) 2.0)) 2.0) (- -1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 11,
    "avg_bits_err_input": 10.122000677655011,
    "avg_bits_err_output": 10.12306861262298,
    "avg_bits_err_improve": -0.0010679349679687533,
    "time": 27345.268310546875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (/ (sqrt (- 1.0 (/ (/ Om Omc) (/ Omc Om)))) (hypot 1.0 (* (/ t l) (sqrt 2.0)))))",
    "output_parens": 11,
    "avg_bits_err_input": 10.122000677655011,
    "avg_bits_err_output": 1.1141285866964301,
    "avg_bits_err_improve": 9.007872090958582,
    "time": 29183.54052734375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (- -1.0 (+ (- (pow (/ Om Omc) 2.0)) -1.0))) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 13,
    "avg_bits_err_input": 9.879134065163266,
    "avg_bits_err_output": 9.879481038585118,
    "avg_bits_err_improve": -0.00034697342185197044,
    "time": 18512.671875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (- (+ 1.0 (pow (/ Om Omc) 2.0)) 1.0)) (+ 1.0 (* 2.0 (* (/ t l) (/ t l)))))))",
    "output_parens": 13,
    "avg_bits_err_input": 9.879134065163266,
    "avg_bits_err_output": 9.879481038585118,
    "avg_bits_err_improve": -0.00034697342185197044,
    "time": 43264.208740234375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (- -1.0 (- -1.0 (pow (/ Om Omc) 2.0)))) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 12,
    "avg_bits_err_input": 9.879134065163266,
    "avg_bits_err_output": 9.879481038585118,
    "avg_bits_err_improve": -0.00034697342185197044,
    "time": 15584.672607421875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (- (+ 1.0 (pow (/ Om Omc) 2.0)) 1.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 12,
    "avg_bits_err_input": 9.879134065163266,
    "avg_bits_err_output": 9.879481038585118,
    "avg_bits_err_improve": -0.00034697342185197044,
    "time": 10607.985107421875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (/ (sqrt (- 1.0 (/ (/ Om Omc) (/ Omc Om)))) (hypot 1.0 (/ t (* (pow 2.0 -0.5) l)))))",
    "output_parens": 11,
    "avg_bits_err_input": 9.879134065163266,
    "avg_bits_err_output": 1.1387886385366364,
    "avg_bits_err_improve": 8.740345426626629,
    "time": 27181.00244140625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (/ (* Om (/ Om Omc)) Omc)) (+ 1.0 (* 2.0 (* (/ t l) (/ t l)))))))",
    "output_parens": 12,
    "avg_bits_err_input": 10.159801384007425,
    "avg_bits_err_output": 10.159926384007425,
    "avg_bits_err_improve": -0.00012500000000059686,
    "time": 18218.537109375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (* (/ Om Omc) (/ Om Omc))) (+ 1.0 (* 2.0 (* (/ t l) (/ t l)))))))",
    "output_parens": 12,
    "avg_bits_err_input": 10.159801384007425,
    "avg_bits_err_output": 10.159926384007425,
    "avg_bits_err_improve": -0.00012500000000059686,
    "time": 173311.38720703125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 10,
    "avg_bits_err_input": 10.159801384007425,
    "avg_bits_err_output": 10.159801384007425,
    "avg_bits_err_improve": 0,
    "time": 10568.310791015625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 10,
    "avg_bits_err_input": 10.159801384007425,
    "avg_bits_err_output": 10.159801384007425,
    "avg_bits_err_improve": 0,
    "time": 11821.20703125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (/ (sqrt (- 1.0 (/ (/ Om Omc) (/ Omc Om)))) (hypot 1.0 (/ (* t 2.0) (* l (sqrt 2.0))))))",
    "output_parens": 12,
    "avg_bits_err_input": 10.159801384007425,
    "avg_bits_err_output": 1.1362874409161738,
    "avg_bits_err_improve": 9.02351394309125,
    "time": 24556.2744140625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (- -1.0 (+ (- (pow (/ Om Omc) 2.0)) -1.0))) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 13,
    "avg_bits_err_input": 10.862531952428254,
    "avg_bits_err_output": 10.863580387019924,
    "avg_bits_err_improve": -0.0010484345916701443,
    "time": 17122.113525390625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (- (+ 1.0 (pow (/ Om Omc) 2.0)) 1.0)) (+ 1.0 (* 2.0 (* (/ t l) (/ t l)))))))",
    "output_parens": 13,
    "avg_bits_err_input": 10.862531952428254,
    "avg_bits_err_output": 10.863580387019924,
    "avg_bits_err_improve": -0.0010484345916701443,
    "time": 96795.03344726562,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (- -1.0 (- -1.0 (pow (/ Om Omc) 2.0)))) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 12,
    "avg_bits_err_input": 10.862531952428254,
    "avg_bits_err_output": 10.863580387019924,
    "avg_bits_err_improve": -0.0010484345916701443,
    "time": 10375.74755859375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (- (+ 1.0 (pow (/ Om Omc) 2.0)) 1.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 12,
    "avg_bits_err_input": 10.862531952428254,
    "avg_bits_err_output": 10.863580387019924,
    "avg_bits_err_improve": -0.0010484345916701443,
    "time": 10082.959716796875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (/ (sqrt (- 1.0 (/ (/ Om Omc) (/ Omc Om)))) (hypot 1.0 (/ 2.0 (* (/ l t) (sqrt 2.0))))))",
    "output_parens": 12,
    "avg_bits_err_input": 10.862531952428254,
    "avg_bits_err_output": 1.217221122888506,
    "avg_bits_err_improve": 9.64531082953975,
    "time": 26729.371337890625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (/ (* Om (/ Om Omc)) Omc)) (+ 1.0 (* 2.0 (* (/ t l) (/ t l)))))))",
    "output_parens": 12,
    "avg_bits_err_input": 10.04127081872016,
    "avg_bits_err_output": 10.041395818720158,
    "avg_bits_err_improve": -0.0001249999999988205,
    "time": 20290.41064453125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (* (/ Om Omc) (/ Om Omc))) (+ 1.0 (* 2.0 (* (/ t l) (+ 1.0 (+ (/ t l) -1.0))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 10.04127081872016,
    "avg_bits_err_output": 10.041020818720158,
    "avg_bits_err_improve": 0.0002500000000011937,
    "time": 26007.513427734375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (if (!= (/ (pow (/ Om Omc) 2.0) (fma 2.0 (pow (/ t l) 2.0) 1.0)) 0.0) (- (/ (pow (/ Om Omc) 2.0) (- -1.0 (* 2.0 (pow (/ t l) 2.0)))) (/ (pow (/ Om Omc) 2.0) (- (- (pow (/ Om Omc) 2.0)) (* (pow (/ Om Omc) 2.0) (* 2.0 (pow (/ t l) 2.0)))))) (/ (- 1.0 (pow (/ Om Omc) 2.0)) (fma 2.0 (pow (/ t l) 2.0) 1.0)))))",
    "output_parens": 38,
    "avg_bits_err_input": 10.04127081872016,
    "avg_bits_err_output": 10.050605001670776,
    "avg_bits_err_improve": -0.009334182950617276,
    "time": 30276.216064453125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 10,
    "avg_bits_err_input": 10.04127081872016,
    "avg_bits_err_output": 10.04127081872016,
    "avg_bits_err_improve": 0,
    "time": 14707.455810546875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (/ (sqrt (- 1.0 (/ (/ Om Omc) (/ Omc Om)))) (hypot 1.0 (* t (/ (sqrt 2.0) l)))))",
    "output_parens": 11,
    "avg_bits_err_input": 10.04127081872016,
    "avg_bits_err_output": 1.0875575174971093,
    "avg_bits_err_improve": 8.95371330122305,
    "time": 27164.126220703125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (/ (* Om (/ Om Omc)) Omc)) (+ 1.0 (* 2.0 (if (!= (* (/ t l) (/ t l)) 0.0) (/ 1.0 (/ 1.0 (* (/ t l) (/ t l)))) (* (/ t l) (/ t l))))))))",
    "output_parens": 22,
    "avg_bits_err_input": 10.622328598079049,
    "avg_bits_err_output": 10.622005477766459,
    "avg_bits_err_improve": 0.000323120312589964,
    "time": 20441.576904296875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (* (/ Om Omc) (/ Om Omc))) (+ 1.0 (* 2.0 (* (/ t l) (/ t l)))))))",
    "output_parens": 12,
    "avg_bits_err_input": 10.622328598079049,
    "avg_bits_err_output": 10.62220359807905,
    "avg_bits_err_improve": 0.0001249999999988205,
    "time": 27608.49609375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (if (!= (pow (/ t l) 2.0) 0.0) (/ 1.0 (/ 1.0 (pow (/ t l) 2.0))) (pow (/ t l) 2.0)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 10.622328598079049,
    "avg_bits_err_output": 10.622255477766458,
    "avg_bits_err_improve": 7.312031259054663e-05,
    "time": 17998.002685546875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (if (!= (pow (/ t l) 2.0) 0.0) (/ 1.0 (/ 1.0 (pow (/ t l) 2.0))) (pow (/ t l) 2.0)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 10.622328598079049,
    "avg_bits_err_output": 10.622255477766458,
    "avg_bits_err_improve": 7.312031259054663e-05,
    "time": 13858.476318359375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (/ (sqrt (- 1.0 (/ (/ Om Omc) (/ Omc Om)))) (hypot 1.0 (* (/ t l) (sqrt 2.0)))))",
    "output_parens": 11,
    "avg_bits_err_input": 10.622328598079049,
    "avg_bits_err_output": 1.1152231010495657,
    "avg_bits_err_improve": 9.507105497029483,
    "time": 26069.577392578125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (if (!= (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (fma 2.0 (pow (/ t l) 2.0) 1.0))) 0.0) (/ (/ (- 1.0 (pow (/ Om Omc) 2.0)) (fma 2.0 (pow (/ t l) 2.0) 1.0)) (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (fma 2.0 (* (/ t l) (/ t l)) 1.0)))) (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (fma 2.0 (pow (/ t l) 2.0) 1.0)))))",
    "output_parens": 36,
    "avg_bits_err_input": 10.384251990995761,
    "avg_bits_err_output": 10.411457458358989,
    "avg_bits_err_improve": -0.027205467363227598,
    "time": 19284.3828125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (- (+ 1.0 (pow (/ Om Omc) 2.0)) 1.0)) (+ 1.0 (* 2.0 (* (/ t l) (/ t l)))))))",
    "output_parens": 13,
    "avg_bits_err_input": 10.384251990995761,
    "avg_bits_err_output": 10.384780121214959,
    "avg_bits_err_improve": -0.0005281302191981752,
    "time": 28219.736083984375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (- -1.0 (- -1.0 (pow (/ Om Omc) 2.0)))) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 12,
    "avg_bits_err_input": 10.384251990995761,
    "avg_bits_err_output": 10.384655121214958,
    "avg_bits_err_improve": -0.0004031302191975783,
    "time": 16954.7822265625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (- (+ 1.0 (pow (/ Om Omc) 2.0)) 1.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 12,
    "avg_bits_err_input": 10.384251990995761,
    "avg_bits_err_output": 10.384655121214958,
    "avg_bits_err_improve": -0.0004031302191975783,
    "time": 14736.978271484375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (/ (sqrt (- 1.0 (/ (/ Om Omc) (/ Omc Om)))) (hypot 1.0 (* (/ t l) (sqrt 2.0)))))",
    "output_parens": 11,
    "avg_bits_err_input": 10.384251990995761,
    "avg_bits_err_output": 1.0939143885068117,
    "avg_bits_err_improve": 9.290337602488949,
    "time": 26547.77783203125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (+ (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 2.0 (* (pow (/ t l) 2.0) 4.0))) (/ (- 1.0 (/ (* Om (/ Om Omc)) Omc)) (+ 2.0 (* (pow (/ t l) 2.0) 4.0))))))",
    "output_parens": 20,
    "avg_bits_err_input": 10.54989865402811,
    "avg_bits_err_output": 10.565023130594861,
    "avg_bits_err_improve": -0.015124476566750644,
    "time": 22658.74365234375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (- (+ 1.0 (pow (/ Om Omc) 2.0)) 1.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 12,
    "avg_bits_err_input": 10.54989865402811,
    "avg_bits_err_output": 10.550767872251503,
    "avg_bits_err_improve": -0.0008692182233929202,
    "time": 25409.175048828125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (if (!= (+ (/ (- -1.0 (pow (/ Om Omc) 2.0)) (fma 2.0 (pow (/ t l) 2.0) 1.0)) (/ -2.0 (fma 2.0 (pow (/ t l) 2.0) 1.0))) 0.0) (* (- 1.0 (pow (/ Om Omc) 2.0)) (/ (/ (+ (- -1.0 (pow (/ Om Omc) 2.0)) -2.0) (fma 2.0 (pow (/ t l) 2.0) 1.0)) (+ (- -1.0 (pow (/ Om Omc) 2.0)) -2.0))) (/ (- 1.0 (pow (/ Om Omc) 2.0)) (fma 2.0 (pow (/ t l) 2.0) 1.0)))))",
    "output_parens": 40,
    "avg_bits_err_input": 10.54989865402811,
    "avg_bits_err_output": 10.555344400619981,
    "avg_bits_err_improve": -0.005445746591870915,
    "time": 20238.831787109375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (+ (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 2.0 (* (pow (/ t l) 2.0) 4.0))) (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 2.0 (* (pow (/ t l) 2.0) 4.0))))))",
    "output_parens": 19,
    "avg_bits_err_input": 10.54989865402811,
    "avg_bits_err_output": 10.565023130594861,
    "avg_bits_err_improve": -0.015124476566750644,
    "time": 15440.208984375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (/ (sqrt (- 1.0 (/ (/ Om Omc) (/ Omc Om)))) (hypot 1.0 (/ t (/ l (sqrt 2.0))))))",
    "output_parens": 11,
    "avg_bits_err_input": 10.54989865402811,
    "avg_bits_err_output": 1.1105953617190913,
    "avg_bits_err_improve": 9.439303292309019,
    "time": 27871.701904296875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (/ (* Om (/ Om Omc)) Omc)) (+ 1.0 (* 2.0 (* (/ t l) (/ t l)))))))",
    "output_parens": 12,
    "avg_bits_err_input": 10.450937440019898,
    "avg_bits_err_output": 10.450937440019898,
    "avg_bits_err_improve": 0,
    "time": 18098.13330078125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (* (/ Om Omc) (/ Om Omc))) (+ 1.0 (* 2.0 (* (/ t l) (/ t l)))))))",
    "output_parens": 12,
    "avg_bits_err_input": 10.450937440019898,
    "avg_bits_err_output": 10.450937440019898,
    "avg_bits_err_improve": 0,
    "time": 21419.95458984375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 10,
    "avg_bits_err_input": 10.450937440019898,
    "avg_bits_err_output": 10.450937440019898,
    "avg_bits_err_improve": 0,
    "time": 13517.96630859375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 10,
    "avg_bits_err_input": 10.450937440019898,
    "avg_bits_err_output": 10.450937440019898,
    "avg_bits_err_improve": 0,
    "time": 9437.52197265625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (/ (sqrt (- 1.0 (/ (/ Om Omc) (/ Omc Om)))) (hypot 1.0 (* (/ t l) (sqrt 2.0)))))",
    "output_parens": 11,
    "avg_bits_err_input": 10.450937440019898,
    "avg_bits_err_output": 1.1005846534342294,
    "avg_bits_err_improve": 9.350352786585669,
    "time": 23603.0693359375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (- (- (pow (/ t l) 2.0) -1.0) 1.0))))))",
    "output_parens": 12,
    "avg_bits_err_input": 10.46811091450147,
    "avg_bits_err_output": 10.47596015991176,
    "avg_bits_err_improve": -0.007849245410291417,
    "time": 24200.304931640625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (- (+ 1.0 (* (/ t l) (/ t l))) 1.0))))))",
    "output_parens": 13,
    "avg_bits_err_input": 10.46811091450147,
    "avg_bits_err_output": 10.47596015991176,
    "avg_bits_err_improve": -0.007849245410291417,
    "time": 110960.85302734375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (- -1.0 (- -1.0 (pow (/ Om Omc) 2.0)))) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 12,
    "avg_bits_err_input": 10.46811091450147,
    "avg_bits_err_output": 10.46950615802758,
    "avg_bits_err_improve": -0.0013952435261099794,
    "time": 9877.65478515625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (- (- (pow (/ t l) 2.0) -1.0) 1.0))))))",
    "output_parens": 12,
    "avg_bits_err_input": 10.46811091450147,
    "avg_bits_err_output": 10.47596015991176,
    "avg_bits_err_improve": -0.007849245410291417,
    "time": 15819.911865234375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (/ (sqrt (- 1.0 (/ (/ Om Omc) (/ Omc Om)))) (hypot 1.0 (/ (* t 2.0) (* l (sqrt 2.0))))))",
    "output_parens": 12,
    "avg_bits_err_input": 10.46811091450147,
    "avg_bits_err_output": 1.023273238553199,
    "avg_bits_err_improve": 9.444837675948271,
    "time": 31370.112060546875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 10,
    "avg_bits_err_input": 9.789597222722069,
    "avg_bits_err_output": 9.789597222722069,
    "avg_bits_err_improve": 0,
    "time": 11993.001953125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (* (/ t l) (/ t l)))))))",
    "output_parens": 11,
    "avg_bits_err_input": 9.789597222722069,
    "avg_bits_err_output": 9.789597222722069,
    "avg_bits_err_improve": 0,
    "time": 159697.13354492188,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 10,
    "avg_bits_err_input": 9.789597222722069,
    "avg_bits_err_output": 9.789597222722069,
    "avg_bits_err_improve": 0,
    "time": 8924.79541015625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 10,
    "avg_bits_err_input": 9.789597222722069,
    "avg_bits_err_output": 9.789597222722069,
    "avg_bits_err_improve": 0,
    "time": 7072.30078125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (/ (sqrt (- 1.0 (/ (/ Om Omc) (/ Omc Om)))) (hypot 1.0 (/ 2.0 (* (/ l t) (sqrt 2.0))))))",
    "output_parens": 12,
    "avg_bits_err_input": 9.789597222722069,
    "avg_bits_err_output": 1.0508549748972793,
    "avg_bits_err_improve": 8.73874224782479,
    "time": 25808.48486328125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (expm1 (log1p (/ (+ (pow (/ Om Omc) 2.0) -1.0) (+ -1.0 (* (pow (/ t l) 2.0) -2.0)))))))",
    "output_parens": 12,
    "avg_bits_err_input": 9.724483127932366,
    "avg_bits_err_output": 9.729895233517723,
    "avg_bits_err_improve": -0.0054121055853570965,
    "time": 19612.42431640625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (expm1 (log1p (/ (- 1.0 (pow (/ Om Omc) 2.0)) (fma 2.0 (* (/ t l) (/ t l)) 1.0))))))",
    "output_parens": 12,
    "avg_bits_err_input": 9.724483127932366,
    "avg_bits_err_output": 9.729895233517723,
    "avg_bits_err_improve": -0.0054121055853570965,
    "time": 48228.135498046875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (+ (pow (/ Om Omc) 2.0) (+ (pow (/ Om Omc) 2.0) -2.0)) (+ -2.0 (* (pow (/ t l) 2.0) -4.0)))))",
    "output_parens": 13,
    "avg_bits_err_input": 9.724483127932366,
    "avg_bits_err_output": 9.733049036902761,
    "avg_bits_err_improve": -0.008565908970394887,
    "time": 30897.878173828125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (expm1 (log1p (/ (- 1.0 (pow (/ Om Omc) 2.0)) (fma 2.0 (pow (/ t l) 2.0) 1.0))))))",
    "output_parens": 11,
    "avg_bits_err_input": 9.724483127932366,
    "avg_bits_err_output": 9.729895233517723,
    "avg_bits_err_improve": -0.0054121055853570965,
    "time": 15487.69384765625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (/ (sqrt (- 1.0 (/ (/ Om Omc) (/ Omc Om)))) (hypot 1.0 (/ 2.0 (* (/ l t) (sqrt 2.0))))))",
    "output_parens": 12,
    "avg_bits_err_input": 9.724483127932366,
    "avg_bits_err_output": 1.1202379206602688,
    "avg_bits_err_improve": 8.604245207272097,
    "time": 27931.272216796875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (/ (* Om (/ Om Omc)) Omc)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 11,
    "avg_bits_err_input": 10.004405037257653,
    "avg_bits_err_output": 10.004530037257654,
    "avg_bits_err_improve": -0.00012500000000059686,
    "time": 18037.558349609375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (* (/ Om Omc) (/ Om Omc))) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 11,
    "avg_bits_err_input": 10.004405037257653,
    "avg_bits_err_output": 10.004405037257653,
    "avg_bits_err_improve": 0,
    "time": 197277.69140625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 10,
    "avg_bits_err_input": 10.004405037257653,
    "avg_bits_err_output": 10.004405037257653,
    "avg_bits_err_improve": 0,
    "time": 19215.34765625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 10,
    "avg_bits_err_input": 10.004405037257653,
    "avg_bits_err_output": 10.004405037257653,
    "avg_bits_err_improve": 0,
    "time": 14311.84228515625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (/ (sqrt (- 1.0 (/ (/ Om Omc) (/ Omc Om)))) (hypot 1.0 (/ (* t (sqrt 2.0)) l))))",
    "output_parens": 11,
    "avg_bits_err_input": 10.004405037257653,
    "avg_bits_err_output": 1.015834723496339,
    "avg_bits_err_improve": 8.988570313761315,
    "time": 27749.138427734375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- -2.0 (- -1.0 (/ (* Om (/ Om Omc)) Omc))) (- -1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 12,
    "avg_bits_err_input": 10.236104477331978,
    "avg_bits_err_output": 10.237674743005021,
    "avg_bits_err_improve": -0.001570265673043636,
    "time": 28706.585205078125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (- (* (/ Om Omc) (+ 1.0 (/ Om Omc))) (- (+ 1.0 (/ Om Omc)) 1.0))) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 16,
    "avg_bits_err_input": 10.236104477331978,
    "avg_bits_err_output": 10.273979068215663,
    "avg_bits_err_improve": -0.0378745908836855,
    "time": 199261.83520507812,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (- -1.0 (- -1.0 (pow (/ Om Omc) 2.0)))) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 12,
    "avg_bits_err_input": 10.236104477331978,
    "avg_bits_err_output": 10.237872863317612,
    "avg_bits_err_improve": -0.0017683859856347794,
    "time": 30815.04443359375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (- (+ 1.0 (pow (/ Om Omc) 2.0)) 1.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 12,
    "avg_bits_err_input": 10.236104477331978,
    "avg_bits_err_output": 10.237872863317612,
    "avg_bits_err_improve": -0.0017683859856347794,
    "time": 22507.12646484375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (/ (sqrt (- 1.0 (/ (/ Om Omc) (/ Omc Om)))) (hypot 1.0 (/ (sqrt 2.0) (/ l t)))))",
    "output_parens": 11,
    "avg_bits_err_input": 10.236104477331978,
    "avg_bits_err_output": 1.0996617755814309,
    "avg_bits_err_improve": 9.136442701750546,
    "time": 30547.1357421875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (* (/ Om Omc) (/ Om Omc))) (+ 1.0 (* 2.0 (* (/ t l) (/ t l)))))))",
    "output_parens": 12,
    "avg_bits_err_input": 10.159428568136615,
    "avg_bits_err_output": 10.159428568136615,
    "avg_bits_err_improve": 0,
    "time": 22076.402587890625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (* (/ Om Omc) (/ Om Omc))) (+ 1.0 (* 2.0 (* (/ t l) (/ t l)))))))",
    "output_parens": 12,
    "avg_bits_err_input": 10.159428568136615,
    "avg_bits_err_output": 10.159428568136615,
    "avg_bits_err_improve": 0,
    "time": 38063.5283203125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 10,
    "avg_bits_err_input": 10.159428568136615,
    "avg_bits_err_output": 10.159428568136615,
    "avg_bits_err_improve": 0,
    "time": 11203.085205078125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 10,
    "avg_bits_err_input": 10.159428568136615,
    "avg_bits_err_output": 10.159428568136615,
    "avg_bits_err_improve": 0,
    "time": 11605.61181640625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (/ (sqrt (- 1.0 (* (/ Om Omc) (/ Om Omc)))) (hypot 1.0 (/ 2.0 (* (/ l t) (sqrt 2.0))))))",
    "output_parens": 12,
    "avg_bits_err_input": 10.159428568136615,
    "avg_bits_err_output": 1.0454212404289767,
    "avg_bits_err_improve": 9.114007327707638,
    "time": 30085.742919921875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (+ (/ (pow (/ Om Omc) 2.0) (- -1.0 (* 2.0 (pow (/ t l) 2.0)))) (/ -1.0 (- -1.0 (* 2.0 (pow (/ t l) 2.0)))))))",
    "output_parens": 15,
    "avg_bits_err_input": 10.513191713756571,
    "avg_bits_err_output": 10.512441713756571,
    "avg_bits_err_improve": 0.0007500000000000284,
    "time": 21401.93212890625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (* (/ t l) (/ t l)))))))",
    "output_parens": 11,
    "avg_bits_err_input": 10.513191713756571,
    "avg_bits_err_output": 10.51344171375657,
    "avg_bits_err_improve": -0.00024999999999941735,
    "time": 63880.849853515625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (- (/ 1.0 (fma 2.0 (pow (/ t l) 2.0) 1.0)) (/ (pow (/ Om Omc) 2.0) (fma 2.0 (pow (/ t l) 2.0) 1.0)))))",
    "output_parens": 13,
    "avg_bits_err_input": 10.513191713756571,
    "avg_bits_err_output": 10.512441713756571,
    "avg_bits_err_improve": 0.0007500000000000284,
    "time": 16534.3271484375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (+ (/ (pow (/ Om Omc) 2.0) (fma (pow (/ t l) 2.0) -2.0 -1.0)) (/ -2.0 (- -2.0 (* (pow (/ t l) 2.0) 4.0))))))",
    "output_parens": 14,
    "avg_bits_err_input": 10.513191713756571,
    "avg_bits_err_output": 10.520066385900797,
    "avg_bits_err_improve": -0.006874672144226324,
    "time": 17089.51123046875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (* (cbrt (- 1.0 (pow (/ Om Omc) 2.0))) (/ (pow (- 1.0 (pow (/ Om Omc) 2.0)) 0.16666666666666666) (hypot 1.0 (* (/ t l) (sqrt 2.0))))))",
    "output_parens": 15,
    "avg_bits_err_input": 10.513191713756571,
    "avg_bits_err_output": 1.0757660396926705,
    "avg_bits_err_improve": 9.4374256740639,
    "time": 27448.677978515625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(/ (log (/ (+ (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0)))) (if (!= (+ (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0)))) 0.0) (/ (if (!= (exp (/ (* PI (+ f f)) 4.0)) 0.0) (/ (if (!= (+ (exp (* PI (/ (* f 4.0) 4.0))) (exp (* PI (* 2.0 (+ (/ f -4.0) (/ f 4.0)))))) 0.0) (/ (if (!= (+ (exp (* (* PI f) 2.0)) (exp (* (+ (/ f -4.0) (/ f 4.0)) (* PI 4.0)))) 0.0) (/ (- (exp (* (* PI f) 4.0)) (exp (* PI (* (+ (/ f -4.0) (/ f 4.0)) 8.0)))) (+ (exp (* (* PI f) 2.0)) (exp (* (+ (/ f -4.0) (/ f 4.0)) (* PI 4.0))))) (- (exp (* (* PI f) 2.0)) (exp (* (+ (/ f -4.0) (/ f 4.0)) (* PI 4.0))))) (+ (exp (* PI (/ (* f 4.0) 4.0))) (exp (* PI (* 2.0 (+ (/ f -4.0) (/ f 4.0))))))) (- (exp (* PI (/ (* f 4.0) 4.0))) (exp (* PI (* 2.0 (+ (/ f -4.0) (/ f 4.0))))))) (exp (/ (* PI (+ f f)) 4.0))) (- (exp (/ (* PI (+ f f)) 4.0)) (exp (* PI (* 2.0 (/ f -4.0)))))) (+ (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))))) (/ PI -4.0))",
    "output_parens": 134,
    "avg_bits_err_input": 61.5730331379407,
    "avg_bits_err_output": 61.4393397103469,
    "avg_bits_err_improve": 0.13369342759379776,
    "time": 65572.81616210938,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (expm1 (* (/ PI 4.0) f)) (expm1 (* (/ PI 4.0) (- f))))))))",
    "output_parens": 22,
    "avg_bits_err_input": 61.5730331379407,
    "avg_bits_err_output": 1.8405316455289185,
    "avg_bits_err_improve": 59.73250149241178,
    "time": 58195.619140625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(/ (log (fma (/ (exp (* PI (/ f -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (/ (exp (* PI (/ f -4.0))) (- (exp (* PI (/ f -4.0))) (exp (* PI (/ f 4.0))))) (fma (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (* (/ (exp (* PI (/ f -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (+ (/ (exp (* PI (/ f -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (/ (exp (* PI (/ f -4.0))) (- (exp (* PI (/ f -4.0))) (exp (* PI (/ f 4.0)))))))))) (/ PI -4.0))",
    "output_parens": 84,
    "avg_bits_err_input": 61.5730331379407,
    "avg_bits_err_output": 61.57899305769849,
    "avg_bits_err_improve": -0.00595991975779242,
    "time": 72377.19970703125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(/ (log (/ (+ (exp (* PI (/ f 4.0))) (exp (/ (* PI f) -4.0))) (if (!= (exp (/ (* PI f) -4.0)) 0.0) (/ (expm1 (* PI (/ (+ f f) -4.0))) (- (exp (/ (* PI f) -4.0)))) (- (exp (* PI (/ f 4.0))) (exp (/ (* PI f) -4.0)))))) (* PI -0.25))",
    "output_parens": 32,
    "avg_bits_err_input": 61.5730331379407,
    "avg_bits_err_output": 1.7567183047328077,
    "avg_bits_err_improve": 59.81631483320789,
    "time": 130953.54663085938,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(* (/ (log (/ 1.0 (tanh (* PI (* 0.25 f))))) PI) -4.0)",
    "output_parens": 7,
    "avg_bits_err_input": 61.5730331379407,
    "avg_bits_err_output": 0.6125703385910185,
    "avg_bits_err_improve": 60.96046279934968,
    "time": 49611.1591796875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(log1p (+ (* (/ 0.5 (- -1.0 eps)) (+ eps eps)) (+ (* -2.0 (/ 0.5 (- -1.0 eps))) -1.0)))",
    "output_parens": 10,
    "avg_bits_err_input": 58.64668196380714,
    "avg_bits_err_output": 50.58583720115195,
    "avg_bits_err_improve": 8.060844762655186,
    "time": 16548.635498046875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(- (+ 1.0 (log (/ (- 1.0 eps) (+ 1.0 eps)))) 1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 58.64668196380714,
    "avg_bits_err_output": 58.65135448039308,
    "avg_bits_err_improve": -0.004672516585941366,
    "time": 120813.03442382812,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(- (exp (log1p (log (/ (- 1.0 eps) (+ 1.0 eps))))) 1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 58.64668196380714,
    "avg_bits_err_output": 58.6828873596938,
    "avg_bits_err_improve": -0.03620539588666105,
    "time": 16066.162109375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(- (exp (log1p (log (/ (- 1.0 eps) (+ 1.0 eps))))) 1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 58.64668196380714,
    "avg_bits_err_output": 58.6828873596938,
    "avg_bits_err_improve": -0.03620539588666105,
    "time": 16230.13671875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(- (log1p (- eps)) (log1p eps))",
    "output_parens": 4,
    "avg_bits_err_input": 58.64668196380714,
    "avg_bits_err_output": 0.007625,
    "avg_bits_err_improve": 58.63905696380714,
    "time": 19269.99072265625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(log (- (/ (- eps -1.0) (- eps -1.0)) (+ (/ eps (- eps -1.0)) (/ eps (- eps -1.0)))))",
    "output_parens": 10,
    "avg_bits_err_input": 58.7186003831563,
    "avg_bits_err_output": 58.68284699357927,
    "avg_bits_err_improve": 0.03575338957703167,
    "time": 19182.160400390625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(log (- (/ (- eps -1.0) (- eps -1.0)) (+ (/ eps (- eps -1.0)) (/ eps (- eps -1.0)))))",
    "output_parens": 10,
    "avg_bits_err_input": 58.7186003831563,
    "avg_bits_err_output": 58.68284699357927,
    "avg_bits_err_improve": 0.03575338957703167,
    "time": 14179.2529296875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(log (- (/ (- eps -1.0) (- eps -1.0)) (+ (/ eps (- eps -1.0)) (/ eps (- eps -1.0)))))",
    "output_parens": 10,
    "avg_bits_err_input": 58.7186003831563,
    "avg_bits_err_output": 58.68284699357927,
    "avg_bits_err_improve": 0.03575338957703167,
    "time": 16994.841552734375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(- (log1p (expm1 (+ 1.0 (log (/ (- 1.0 eps) (+ 1.0 eps)))))) 1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 58.7186003831563,
    "avg_bits_err_output": 58.72873798014717,
    "avg_bits_err_improve": -0.010137596990873021,
    "time": 105039.8994140625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(- (log1p (- eps)) (log1p eps))",
    "output_parens": 4,
    "avg_bits_err_input": 58.7186003831563,
    "avg_bits_err_output": 0.00575,
    "avg_bits_err_improve": 58.7128503831563,
    "time": 15953.6064453125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(log1p (+ (* (/ 0.5 (- -1.0 eps)) (+ eps eps)) (if (!= (- (/ -1.0 (- -1.0 eps)) -1.0) 0.0) (/ (+ -1.0 (pow (/ -1.0 (- -1.0 eps)) 2.0)) (- (/ -1.0 (- -1.0 eps)) -1.0)) (- -1.0 (/ 1.0 (- -1.0 eps))))))",
    "output_parens": 22,
    "avg_bits_err_input": 58.46515362392268,
    "avg_bits_err_output": 50.45171662413065,
    "avg_bits_err_improve": 8.013436999792034,
    "time": 17785.697509765625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(- (+ -1.0 (log (/ (- 1.0 eps) (+ 1.0 eps)))) -1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 58.46515362392268,
    "avg_bits_err_output": 58.4871017522111,
    "avg_bits_err_improve": -0.021948128288421742,
    "time": 64294.9150390625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(- (exp (log1p (- (+ (log (/ (- 1.0 eps) (- eps -1.0))) -1.0) -1.0))) 1.0)",
    "output_parens": 9,
    "avg_bits_err_input": 58.46515362392268,
    "avg_bits_err_output": 58.53070317082191,
    "avg_bits_err_improve": -0.0655495468992271,
    "time": 19644.81396484375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(- (exp (log1p (- (+ (log (/ (- 1.0 eps) (- eps -1.0))) -1.0) -1.0))) 1.0)",
    "output_parens": 9,
    "avg_bits_err_input": 58.46515362392268,
    "avg_bits_err_output": 58.53070317082191,
    "avg_bits_err_improve": -0.0655495468992271,
    "time": 19161.3447265625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(- (log1p (- eps)) (log1p eps))",
    "output_parens": 4,
    "avg_bits_err_input": 58.46515362392268,
    "avg_bits_err_output": 0.008125,
    "avg_bits_err_improve": 58.45702862392268,
    "time": 8871.9228515625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(log (- (/ (- eps -1.0) (- eps -1.0)) (+ (/ eps (- eps -1.0)) (/ eps (- eps -1.0)))))",
    "output_parens": 10,
    "avg_bits_err_input": 58.71929061624231,
    "avg_bits_err_output": 58.67689434246819,
    "avg_bits_err_improve": 0.04239627377412347,
    "time": 19185.6005859375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(log (- (/ (- eps -1.0) (- eps -1.0)) (+ (/ eps (- eps -1.0)) (/ eps (- eps -1.0)))))",
    "output_parens": 10,
    "avg_bits_err_input": 58.71929061624231,
    "avg_bits_err_output": 58.67689434246819,
    "avg_bits_err_improve": 0.04239627377412347,
    "time": 17775.0322265625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(log (- (/ (- eps -1.0) (- eps -1.0)) (+ (/ eps (- eps -1.0)) (/ eps (- eps -1.0)))))",
    "output_parens": 10,
    "avg_bits_err_input": 58.71929061624231,
    "avg_bits_err_output": 58.67689434246819,
    "avg_bits_err_improve": 0.04239627377412347,
    "time": 16914.94677734375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(fma (/ 1.0 (+ 1.0 (log (/ (- 1.0 eps) (+ 1.0 eps))))) (* (- -1.0 (- (+ (log (/ (- 1.0 eps) (+ 1.0 eps))) 2.0) 2.0)) (- -1.0 (log (/ (- 1.0 eps) (+ 1.0 eps))))) -1.0)",
    "output_parens": 20,
    "avg_bits_err_input": 58.71929061624231,
    "avg_bits_err_output": 58.746051774683856,
    "avg_bits_err_improve": -0.026761158441544808,
    "time": 135406.17114257812,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(- (log1p (- eps)) (log1p eps))",
    "output_parens": 4,
    "avg_bits_err_input": 58.71929061624231,
    "avg_bits_err_output": 0.00575,
    "avg_bits_err_improve": 58.71354061624231,
    "time": 17980.11572265625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (if (!= (- (sqrt (fma b b (* (* a c) -4.0))) b) 0.0) (fma a (/ (* c 4.0) (- (sqrt (fma a (* c -4.0) (* b b))) b)) 0.0) (- (- b) (sqrt (fma b b (* (* a c) -4.0))))) (* a 2.0))",
    "output_parens": 23,
    "avg_bits_err_input": 33.85652725117812,
    "avg_bits_err_output": 21.930902570824657,
    "avg_bits_err_improve": 11.925624680353465,
    "time": 24327.2041015625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (+ (* c (* (/ 1.0 (sqrt (fma a (* c -4.0) (* b b)))) (* a 4.0))) (- (* b (* (/ 1.0 (sqrt (fma a (* c -4.0) (* b b)))) (- b))) b)) (+ a a))",
    "output_parens": 20,
    "avg_bits_err_input": 33.85652725117812,
    "avg_bits_err_output": 31.85545697384997,
    "avg_bits_err_improve": 2.00107027732815,
    "time": 40681.354248046875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (/ (+ b (sqrt (if (!= (- (* c (* a -4.0)) (* b b)) 0.0) (fma c (* (* a 16.0) (* a (/ c (- (* a (* c -4.0)) (* b b))))) (* (* b b) (/ (* b b) (- (* b b) (* a (* c -4.0)))))) (fma c (* a -4.0) (* b b))))) -2.0) a)",
    "output_parens": 30,
    "avg_bits_err_input": 33.85652725117812,
    "avg_bits_err_output": 33.72854510259447,
    "avg_bits_err_improve": 0.12798214858365498,
    "time": 25999.584228515625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(* (if (!= (- (sqrt (fma -4.0 (* c a) (* b b))) b) 0.0) (* (/ (* c -4.0) (- (sqrt (fma a (* c -4.0) (* b b))) b)) a) (+ b (sqrt (fma -4.0 (* c a) (* b b))))) (/ -0.5 a))",
    "output_parens": 22,
    "avg_bits_err_input": 33.85652725117812,
    "avg_bits_err_output": 22.02032485589742,
    "avg_bits_err_improve": 11.8362023952807,
    "time": 24069.235595703125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(if (<= (/ (- (- b) (sqrt (+ (* b b) (* (* a c) -4.0)))) (* a 2.0)) (- INFINITY)) (* -0.5 (/ (+ b (hypot (* (sqrt (* c -4.0)) (sqrt a)) b)) a)) (if (<= (/ (- (- b) (sqrt (+ (* b b) (* (* a c) -4.0)))) (* a 2.0)) 1e+246) (* -0.5 (/ (+ b (sqrt (fma b b (* a (* c -4.0))))) a)) (* -0.5 (/ (+ b (hypot (* (sqrt (* a -4.0)) (sqrt c)) b)) a))))",
    "output_parens": 46,
    "avg_bits_err_input": 33.85652725117812,
    "avg_bits_err_output": 23.542221856748164,
    "avg_bits_err_improve": 10.314305394429958,
    "time": 37429.156005859375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(if (<= x -1e+26) (if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (/ (if (!= (/ (/ x (+ x (/ 1.0 x))) 2.0) 0.0) (/ x (+ x (/ 1.0 x))) (/ x (+ x (/ 1.0 x)))) x) (/ x (fma x x 1.0))) (if (<= x 1e-26) (/ (+ (/ x (fma x x 1.0)) (/ (+ x (+ x x)) (fma x x 1.0))) 4.0) (if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (/ (if (!= (/ (/ x (+ x (/ 1.0 x))) 2.0) 0.0) (/ x (+ x (/ 1.0 x))) (/ x (+ x (/ 1.0 x)))) x) (/ x (fma x x 1.0)))))",
    "output_parens": 62,
    "avg_bits_err_input": 14.68810725363533,
    "avg_bits_err_output": 0.016021240625180292,
    "avg_bits_err_improve": 14.67208601301015,
    "time": 8061.09228515625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 14.68810725363533,
    "avg_bits_err_output": 14.68810725363533,
    "avg_bits_err_improve": 0,
    "time": 37547.202392578125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (- (/ (/ (- x 0.0) x) (+ x (/ 1.0 x))) 0.0) (/ x (fma x x 1.0)))",
    "output_parens": 18,
    "avg_bits_err_input": 14.68810725363533,
    "avg_bits_err_output": 0.10140364453968134,
    "avg_bits_err_improve": 14.586703609095649,
    "time": 11903.08740234375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(if (<= x -1e+26) (if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (- (/ (if (!= (/ (/ x (+ x (/ 1.0 x))) 2.0) 0.0) (/ x (+ x (/ 1.0 x))) (/ x (+ x (/ 1.0 x)))) x) 0.0) (/ x (fma x x 1.0))) (if (<= x 1e-26) (/ (+ (/ x (fma x x 1.0)) (/ (+ x (+ x x)) (fma x x 1.0))) 4.0) (if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (- (/ (if (!= (/ (/ x (+ x (/ 1.0 x))) 2.0) 0.0) (/ x (+ x (/ 1.0 x))) (/ x (+ x (/ 1.0 x)))) x) 0.0) (/ x (fma x x 1.0)))))",
    "output_parens": 64,
    "avg_bits_err_input": 14.68810725363533,
    "avg_bits_err_output": 0.016021240625180292,
    "avg_bits_err_improve": 14.67208601301015,
    "time": 10609.453857421875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(* (/ x (hypot 1.0 x)) (/ 1.0 (hypot 1.0 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 14.68810725363533,
    "avg_bits_err_output": 0.01636804531403246,
    "avg_bits_err_improve": 14.671739208321299,
    "time": 16275.388427734375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(if (<= x -0.001) (if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (- (/ (if (!= (/ (/ x (+ x (/ 1.0 x))) 2.0) 0.0) (/ x (+ x (/ 1.0 x))) (/ x (+ x (/ 1.0 x)))) x) 0.0) (/ x (fma x x 1.0))) (if (<= x 2e-7) (/ x (+ (* x x) 1.0)) (if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (- (/ (if (!= (/ (/ x (+ x (/ 1.0 x))) 2.0) 0.0) (/ x (+ x (/ 1.0 x))) (/ x (+ x (/ 1.0 x)))) x) 0.0) (/ x (fma x x 1.0)))))",
    "output_parens": 59,
    "avg_bits_err_input": 15.0717478663596,
    "avg_bits_err_output": 0.01252124062518029,
    "avg_bits_err_improve": 15.05922662573442,
    "time": 5952.658203125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 15.0717478663596,
    "avg_bits_err_output": 15.0717478663596,
    "avg_bits_err_improve": 0,
    "time": 28677.870849609375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(if (<= x -0.001) (if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (- (/ (- 0.0 (/ x (+ x (/ 1.0 x)))) (- x)) 0.0) (/ x (fma x x 1.0))) (if (<= x 2e-7) (/ x (+ (* x x) 1.0)) (if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (- (/ (- 0.0 (/ x (+ x (/ 1.0 x)))) (- x)) 0.0) (/ x (fma x x 1.0)))))",
    "output_parens": 45,
    "avg_bits_err_input": 15.0717478663596,
    "avg_bits_err_output": 0.01252124062518029,
    "avg_bits_err_improve": 15.05922662573442,
    "time": 6082.718017578125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(if (<= x -0.001) (if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (- (/ (- 0.0 (/ x (+ x (/ 1.0 x)))) (- x)) 0.0) (/ x (fma x x 1.0))) (if (<= x 2e-7) (/ x (+ (* x x) 1.0)) (if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (- (/ (- 0.0 (/ x (+ x (/ 1.0 x)))) (- x)) 0.0) (/ x (fma x x 1.0)))))",
    "output_parens": 45,
    "avg_bits_err_input": 15.0717478663596,
    "avg_bits_err_output": 0.01252124062518029,
    "avg_bits_err_improve": 15.05922662573442,
    "time": 5697.998779296875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(* (/ x (hypot 1.0 x)) (/ 1.0 (hypot 1.0 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 15.0717478663596,
    "avg_bits_err_output": 0.021882331253245214,
    "avg_bits_err_improve": 15.049865535106354,
    "time": 9607.187255859375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(if (<= x -100000000000.0) (if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (- (* (/ (+ x x) (+ x (/ 1.0 x))) (/ 1.0 (+ x x))) 0.0) (/ x (fma x x 1.0))) (if (<= x 5e-37) (/ x (+ (* x x) 1.0)) (if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (- (* (/ (+ x x) (+ x (/ 1.0 x))) (/ 1.0 (+ x x))) 0.0) (/ x (fma x x 1.0)))))",
    "output_parens": 47,
    "avg_bits_err_input": 14.791668553750958,
    "avg_bits_err_output": 0.027948120312590145,
    "avg_bits_err_improve": 14.763720433438367,
    "time": 9425.971435546875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 14.791668553750958,
    "avg_bits_err_output": 14.791668553750958,
    "avg_bits_err_improve": 0,
    "time": 21665.7900390625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(if (<= x -100000000000.0) (if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (- (* (/ x (+ x (/ 1.0 x))) (/ 1.0 x)) 0.0) (/ x (fma x x 1.0))) (if (<= x 5e-37) (/ x (+ (* x x) 1.0)) (if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (- (* (/ x (+ x (/ 1.0 x))) (/ 1.0 x)) 0.0) (/ x (fma x x 1.0)))))",
    "output_parens": 43,
    "avg_bits_err_input": 14.791668553750958,
    "avg_bits_err_output": 0.011698120312590146,
    "avg_bits_err_improve": 14.779970433438367,
    "time": 9805.85986328125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(if (<= x -100000000000.0) (if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (- (* (/ x (+ x (/ 1.0 x))) (/ 1.0 x)) 0.0) (/ x (fma x x 1.0))) (if (<= x 5e-37) (/ x (+ (* x x) 1.0)) (if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (- (* (/ x (+ x (/ 1.0 x))) (/ 1.0 x)) 0.0) (/ x (fma x x 1.0)))))",
    "output_parens": 43,
    "avg_bits_err_input": 14.791668553750958,
    "avg_bits_err_output": 0.011698120312590146,
    "avg_bits_err_improve": 14.779970433438367,
    "time": 8789.236572265625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(* (/ x (hypot 1.0 x)) (/ 1.0 (hypot 1.0 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 14.791668553750958,
    "avg_bits_err_output": 0.019349248439933908,
    "avg_bits_err_improve": 14.772319305311024,
    "time": 15182.462646484375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 15.232342327066089,
    "avg_bits_err_output": 15.232342327066089,
    "avg_bits_err_improve": 0,
    "time": 17523.210205078125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 15.232342327066089,
    "avg_bits_err_output": 15.232342327066089,
    "avg_bits_err_improve": 0,
    "time": 24773.691162109375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 15.232342327066089,
    "avg_bits_err_output": 15.232342327066089,
    "avg_bits_err_improve": 0,
    "time": 10541.302978515625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 15.232342327066089,
    "avg_bits_err_output": 15.232342327066089,
    "avg_bits_err_improve": 0,
    "time": 22713.0595703125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(* (/ x (hypot 1.0 x)) (/ 1.0 (hypot 1.0 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 15.232342327066089,
    "avg_bits_err_output": 0.018901128127343767,
    "avg_bits_err_improve": 15.213441198938746,
    "time": 18246.078857421875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(if (<= x -5e+21) (if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (- (* (/ (+ x x) (+ x (/ 1.0 x))) (/ 1.0 (+ x x))) 0.0) (/ x (fma x x 1.0))) (if (<= x 5e-6) (/ x (+ (* x x) 1.0)) (if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (- (* (/ (+ x x) (+ x (/ 1.0 x))) (/ 1.0 (+ x x))) 0.0) (/ x (fma x x 1.0)))))",
    "output_parens": 47,
    "avg_bits_err_input": 15.335924263130591,
    "avg_bits_err_output": 0.019875,
    "avg_bits_err_improve": 15.31604926313059,
    "time": 9868.085693359375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 15.335924263130591,
    "avg_bits_err_output": 15.335924263130591,
    "avg_bits_err_improve": 0,
    "time": 38820.333984375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ (+ (/ x (fma x x 1.0)) (/ (+ x (+ x x)) (fma x x 1.0))) 4.0)",
    "output_parens": 8,
    "avg_bits_err_input": 15.335924263130591,
    "avg_bits_err_output": 15.354761371984198,
    "avg_bits_err_improve": -0.018837108853606566,
    "time": 12318.793701171875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ (+ (/ x (fma x x 1.0)) (/ (+ x (+ x x)) (fma x x 1.0))) 4.0)",
    "output_parens": 8,
    "avg_bits_err_input": 15.335924263130591,
    "avg_bits_err_output": 15.354761371984198,
    "avg_bits_err_improve": -0.018837108853606566,
    "time": 11665.961181640625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(* (/ x (hypot 1.0 x)) (/ 1.0 (hypot 1.0 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 15.335924263130591,
    "avg_bits_err_output": 0.017233646876983186,
    "avg_bits_err_improve": 15.318690616253608,
    "time": 7926.590087890625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(if (<= x -2e+14) (if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (- (* (/ (+ x x) (+ x (/ 1.0 x))) (/ 1.0 (+ x x))) 0.0) (/ x (fma x x 1.0))) (if (<= x 5e-20) (/ x (+ (* x x) 1.0)) (if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (- (* (/ (+ x x) (+ x (/ 1.0 x))) (/ 1.0 (+ x x))) 0.0) (/ x (fma x x 1.0)))))",
    "output_parens": 47,
    "avg_bits_err_input": 14.969313845086171,
    "avg_bits_err_output": 0.04344812031259015,
    "avg_bits_err_improve": 14.925865724773582,
    "time": 10483.94189453125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 14.969313845086171,
    "avg_bits_err_output": 14.969313845086171,
    "avg_bits_err_improve": 0,
    "time": 46041.085205078125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 14.969313845086171,
    "avg_bits_err_output": 14.969313845086171,
    "avg_bits_err_improve": 0,
    "time": 10754.9306640625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 14.969313845086171,
    "avg_bits_err_output": 14.969313845086171,
    "avg_bits_err_improve": 0,
    "time": 11661.113525390625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(* (/ x (hypot 1.0 x)) (/ 1.0 (hypot 1.0 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 14.969313845086171,
    "avg_bits_err_output": 0.019361090628064924,
    "avg_bits_err_improve": 14.949952754458106,
    "time": 17922.86083984375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 15.238760082455856,
    "avg_bits_err_output": 15.238760082455856,
    "avg_bits_err_improve": 0,
    "time": 13700.831298828125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 15.238760082455856,
    "avg_bits_err_output": 15.238760082455856,
    "avg_bits_err_improve": 0,
    "time": 31415.33740234375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 15.238760082455856,
    "avg_bits_err_output": 15.238760082455856,
    "avg_bits_err_improve": 0,
    "time": 15184.533203125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 15.238760082455856,
    "avg_bits_err_output": 15.238760082455856,
    "avg_bits_err_improve": 0,
    "time": 13446.46923828125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(* (/ x (hypot 1.0 x)) (/ 1.0 (hypot 1.0 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 15.238760082455856,
    "avg_bits_err_output": 0.01634924843993391,
    "avg_bits_err_improve": 15.222410834015923,
    "time": 9190.863037109375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(if (<= x -5e-8) (if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (/ (if (!= (/ (/ x (+ x (/ 1.0 x))) 2.0) 0.0) (/ x (+ x (/ 1.0 x))) (/ x (+ x (/ 1.0 x)))) x) (/ x (fma x x 1.0))) (if (<= x 500000000.0) (if (!= (/ x (fma x x 1.0)) 0.0) (* x (/ x (* x (fma x x 1.0)))) (/ x (fma x x 1.0))) (if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (/ (if (!= (/ (/ x (+ x (/ 1.0 x))) 2.0) 0.0) (/ x (+ x (/ 1.0 x))) (/ x (+ x (/ 1.0 x)))) x) (/ x (fma x x 1.0)))))",
    "output_parens": 64,
    "avg_bits_err_input": 14.7099627821281,
    "avg_bits_err_output": 0.008667481250360577,
    "avg_bits_err_improve": 14.701295300877739,
    "time": 9797.97509765625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 14.7099627821281,
    "avg_bits_err_output": 14.7099627821281,
    "avg_bits_err_improve": 0,
    "time": 36478.2236328125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 14.7099627821281,
    "avg_bits_err_output": 14.7099627821281,
    "avg_bits_err_improve": 0,
    "time": 11835.527099609375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(if (<= x -5e-8) (if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (- (/ (if (!= (/ (/ x (+ x (/ 1.0 x))) 2.0) 0.0) (/ x (+ x (/ 1.0 x))) (/ x (+ x (/ 1.0 x)))) x) 0.0) (/ x (fma x x 1.0))) (if (<= x 500000000.0) (/ x (+ (* x x) 1.0)) (if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (- (/ (if (!= (/ (/ x (+ x (/ 1.0 x))) 2.0) 0.0) (/ x (+ x (/ 1.0 x))) (/ x (+ x (/ 1.0 x)))) x) 0.0) (/ x (fma x x 1.0)))))",
    "output_parens": 59,
    "avg_bits_err_input": 14.7099627821281,
    "avg_bits_err_output": 0.007469360937770434,
    "avg_bits_err_improve": 14.70249342119033,
    "time": 9480.67578125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(* (/ x (hypot 1.0 x)) (/ 1.0 (hypot 1.0 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 14.7099627821281,
    "avg_bits_err_output": 0.01829736875252406,
    "avg_bits_err_improve": 14.691665413375576,
    "time": 6682.308349609375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(if (<= x -2e+73) (if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (* (/ (+ x x) (+ x (/ 1.0 x))) (/ 1.0 (+ x x))) (/ x (fma x x 1.0))) (if (<= x 2e-26) (/ x (+ (* x x) 1.0)) (if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (* (/ (+ x x) (+ x (/ 1.0 x))) (/ 1.0 (+ x x))) (/ x (fma x x 1.0)))))",
    "output_parens": 45,
    "avg_bits_err_input": 14.903628770797948,
    "avg_bits_err_output": 0.06425,
    "avg_bits_err_improve": 14.839378770797948,
    "time": 11438.823974609375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 14.903628770797948,
    "avg_bits_err_output": 14.903628770797948,
    "avg_bits_err_improve": 0,
    "time": 21251.172607421875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (- (/ (/ (- x 0.0) x) (+ x (/ 1.0 x))) 0.0) (/ x (fma x x 1.0)))",
    "output_parens": 18,
    "avg_bits_err_input": 14.903628770797948,
    "avg_bits_err_output": 0.09152124062518029,
    "avg_bits_err_improve": 14.812107530172767,
    "time": 7904.823974609375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (- (/ (/ (- x 0.0) x) (+ x (/ 1.0 x))) 0.0) (/ x (fma x x 1.0)))",
    "output_parens": 18,
    "avg_bits_err_input": 14.903628770797948,
    "avg_bits_err_output": 0.09152124062518029,
    "avg_bits_err_improve": 14.812107530172767,
    "time": 8129.6552734375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(* (/ x (hypot 1.0 x)) (/ 1.0 (hypot 1.0 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 14.903628770797948,
    "avg_bits_err_output": 0.020724248439933913,
    "avg_bits_err_improve": 14.882904522358015,
    "time": 5614.635498046875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(if (<= x -50.0) (if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (/ (if (!= (/ (/ x (+ x (/ 1.0 x))) 2.0) 0.0) (/ x (+ x (/ 1.0 x))) (/ x (+ x (/ 1.0 x)))) x) (/ x (fma x x 1.0))) (if (<= x 5e-12) (/ (+ (/ x (fma x x 1.0)) (/ (+ x (+ x x)) (fma x x 1.0))) 4.0) (if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (/ (if (!= (/ (/ x (+ x (/ 1.0 x))) 2.0) 0.0) (/ x (+ x (/ 1.0 x))) (/ x (+ x (/ 1.0 x)))) x) (/ x (fma x x 1.0)))))",
    "output_parens": 62,
    "avg_bits_err_input": 14.731017406151821,
    "avg_bits_err_output": 0.008771240625180289,
    "avg_bits_err_improve": 14.722246165526641,
    "time": 10906.71728515625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 14.731017406151821,
    "avg_bits_err_output": 14.731017406151821,
    "avg_bits_err_improve": 0,
    "time": 17674.770263671875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 14.731017406151821,
    "avg_bits_err_output": 14.731017406151821,
    "avg_bits_err_improve": 0,
    "time": 11123.199462890625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 14.731017406151821,
    "avg_bits_err_output": 14.731017406151821,
    "avg_bits_err_improve": 0,
    "time": 12345.2109375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(* (/ x (hypot 1.0 x)) (/ 1.0 (hypot 1.0 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 14.731017406151821,
    "avg_bits_err_output": 0.016587406251802897,
    "avg_bits_err_improve": 14.714429999900018,
    "time": 8456.518798828125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 15.186054409420443,
    "avg_bits_err_output": 15.186054409420443,
    "avg_bits_err_improve": 0,
    "time": 12897.8330078125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 15.186054409420443,
    "avg_bits_err_output": 15.186054409420443,
    "avg_bits_err_improve": 0,
    "time": 57775.75048828125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(if (<= x -4e-6) (if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (- (/ (* (/ (/ x (+ x (/ 1.0 x))) (+ x (/ 1.0 x))) (/ x (/ x (+ x (/ 1.0 x))))) x) 0.0) (/ x (fma x x 1.0))) (if (<= x 0.002) (/ x (+ (* x x) 1.0)) (if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (- (/ (* (/ (/ x (+ x (/ 1.0 x))) (+ x (/ 1.0 x))) (/ x (/ x (+ x (/ 1.0 x))))) x) 0.0) (/ x (fma x x 1.0)))))",
    "output_parens": 57,
    "avg_bits_err_input": 15.186054409420443,
    "avg_bits_err_output": 0.011396240625180288,
    "avg_bits_err_improve": 15.174658168795263,
    "time": 16238.798828125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(if (<= x -4e-6) (if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (- (/ (* (/ (/ x (+ x (/ 1.0 x))) (+ x (/ 1.0 x))) (/ x (/ x (+ x (/ 1.0 x))))) x) 0.0) (/ x (fma x x 1.0))) (if (<= x 0.002) (/ x (+ (* x x) 1.0)) (if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (- (/ (* (/ (/ x (+ x (/ 1.0 x))) (+ x (/ 1.0 x))) (/ x (/ x (+ x (/ 1.0 x))))) x) 0.0) (/ x (fma x x 1.0)))))",
    "output_parens": 57,
    "avg_bits_err_input": 15.186054409420443,
    "avg_bits_err_output": 0.011396240625180288,
    "avg_bits_err_improve": 15.174658168795263,
    "time": 15803.818115234375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(* (/ x (hypot 1.0 x)) (/ 1.0 (hypot 1.0 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 15.186054409420443,
    "avg_bits_err_output": 0.0181204890651142,
    "avg_bits_err_improve": 15.16793392035533,
    "time": 8088.802734375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 14.918746765158422,
    "avg_bits_err_output": 14.918746765158422,
    "avg_bits_err_improve": 0,
    "time": 14752.784912109375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 14.918746765158422,
    "avg_bits_err_output": 14.918746765158422,
    "avg_bits_err_improve": 0,
    "time": 85637.62475585938,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(if (<= x -5e+17) (if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (- (/ (if (!= (/ (/ x (+ x (/ 1.0 x))) 2.0) 0.0) (/ x (+ x (/ 1.0 x))) (/ x (+ x (/ 1.0 x)))) x) 0.0) (/ x (fma x x 1.0))) (if (<= x 5e-7) (/ x (+ (* x x) 1.0)) (if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (- (/ (if (!= (/ (/ x (+ x (/ 1.0 x))) 2.0) 0.0) (/ x (+ x (/ 1.0 x))) (/ x (+ x (/ 1.0 x)))) x) 0.0) (/ x (fma x x 1.0)))))",
    "output_parens": 59,
    "avg_bits_err_input": 14.918746765158422,
    "avg_bits_err_output": 0.010698120312590145,
    "avg_bits_err_improve": 14.908048644845833,
    "time": 9245.5234375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(if (<= x -5e+17) (if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (- (/ (if (!= (/ (/ x (+ x (/ 1.0 x))) 2.0) 0.0) (/ x (+ x (/ 1.0 x))) (/ x (+ x (/ 1.0 x)))) x) 0.0) (/ x (fma x x 1.0))) (if (<= x 5e-7) (/ x (+ (* x x) 1.0)) (if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (- (/ (if (!= (/ (/ x (+ x (/ 1.0 x))) 2.0) 0.0) (/ x (+ x (/ 1.0 x))) (/ x (+ x (/ 1.0 x)))) x) 0.0) (/ x (fma x x 1.0)))))",
    "output_parens": 59,
    "avg_bits_err_input": 14.918746765158422,
    "avg_bits_err_output": 0.010698120312590145,
    "avg_bits_err_improve": 14.908048644845833,
    "time": 10394.275390625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(* (/ x (hypot 1.0 x)) (/ 1.0 (hypot 1.0 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 14.918746765158422,
    "avg_bits_err_output": 0.019516729690294488,
    "avg_bits_err_improve": 14.899230035468127,
    "time": 13046.21826171875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 15.937445964149477,
    "avg_bits_err_output": 15.937445964149477,
    "avg_bits_err_improve": 0,
    "time": 14499.573486328125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 15.937445964149477,
    "avg_bits_err_output": 15.937445964149477,
    "avg_bits_err_improve": 0,
    "time": 72725.00634765625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 15.937445964149477,
    "avg_bits_err_output": 15.937445964149477,
    "avg_bits_err_improve": 0,
    "time": 10226.666748046875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 15.937445964149477,
    "avg_bits_err_output": 15.937445964149477,
    "avg_bits_err_improve": 0,
    "time": 11064.545166015625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(* (/ x (hypot 1.0 x)) (/ 1.0 (hypot 1.0 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 15.937445964149477,
    "avg_bits_err_output": 0.013816165626622608,
    "avg_bits_err_improve": 15.923629798522855,
    "time": 8179.471435546875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(if (<= x -20000000.0) (if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (- (/ (if (!= (/ (/ x (+ x (/ 1.0 x))) 2.0) 0.0) (/ x (+ x (/ 1.0 x))) (/ x (+ x (/ 1.0 x)))) x) 0.0) (/ x (fma x x 1.0))) (if (<= x 2e-5) (/ x (+ (* x x) 1.0)) (if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (- (/ (if (!= (/ (/ x (+ x (/ 1.0 x))) 2.0) 0.0) (/ x (+ x (/ 1.0 x))) (/ x (+ x (/ 1.0 x)))) x) 0.0) (/ x (fma x x 1.0)))))",
    "output_parens": 59,
    "avg_bits_err_input": 14.862961151971179,
    "avg_bits_err_output": 0.01,
    "avg_bits_err_improve": 14.85296115197118,
    "time": 6487.52490234375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 14.862961151971179,
    "avg_bits_err_output": 14.862961151971179,
    "avg_bits_err_improve": 0,
    "time": 32761.886962890625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(if (<= x -20000000.0) (if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (- (/ (if (!= (/ (/ x (+ x (/ 1.0 x))) 2.0) 0.0) (/ x (+ x (/ 1.0 x))) (/ x (+ x (/ 1.0 x)))) x) 0.0) (/ x (fma x x 1.0))) (if (<= x 2e-5) (/ x (+ (* x x) 1.0)) (if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (- (/ (if (!= (/ (/ x (+ x (/ 1.0 x))) 2.0) 0.0) (/ x (+ x (/ 1.0 x))) (/ x (+ x (/ 1.0 x)))) x) 0.0) (/ x (fma x x 1.0)))))",
    "output_parens": 59,
    "avg_bits_err_input": 14.862961151971179,
    "avg_bits_err_output": 0.01,
    "avg_bits_err_improve": 14.85296115197118,
    "time": 6728.561279296875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(if (<= x -20000000.0) (if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (- (/ (if (!= (/ (/ x (+ x (/ 1.0 x))) 2.0) 0.0) (/ x (+ x (/ 1.0 x))) (/ x (+ x (/ 1.0 x)))) x) 0.0) (/ x (fma x x 1.0))) (if (<= x 2e-5) (/ x (+ (* x x) 1.0)) (if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (- (/ (if (!= (/ (/ x (+ x (/ 1.0 x))) 2.0) 0.0) (/ x (+ x (/ 1.0 x))) (/ x (+ x (/ 1.0 x)))) x) 0.0) (/ x (fma x x 1.0)))))",
    "output_parens": 59,
    "avg_bits_err_input": 14.862961151971179,
    "avg_bits_err_output": 0.01,
    "avg_bits_err_improve": 14.85296115197118,
    "time": 4878.078857421875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(* (/ x (hypot 1.0 x)) (/ 1.0 (hypot 1.0 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 14.862961151971179,
    "avg_bits_err_output": 0.01907800781475362,
    "avg_bits_err_improve": 14.843883144156425,
    "time": 13298.02978515625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(if (<= x -0.05) (if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (/ (if (!= (/ (/ x (+ x (/ 1.0 x))) 2.0) 0.0) (/ x (+ x (/ 1.0 x))) (/ x (+ x (/ 1.0 x)))) x) (/ x (fma x x 1.0))) (if (<= x 1000000.0) (/ x (+ (* x x) 1.0)) (if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (/ (if (!= (/ (/ x (+ x (/ 1.0 x))) 2.0) 0.0) (/ x (+ x (/ 1.0 x))) (/ x (+ x (/ 1.0 x)))) x) (/ x (fma x x 1.0)))))",
    "output_parens": 57,
    "avg_bits_err_input": 14.674814088112495,
    "avg_bits_err_output": 0.009625,
    "avg_bits_err_improve": 14.665189088112495,
    "time": 6070.620849609375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 14.674814088112495,
    "avg_bits_err_output": 14.674814088112495,
    "avg_bits_err_improve": 0,
    "time": 49343.405029296875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (- (/ (/ (- x 0.0) x) (+ x (/ 1.0 x))) 0.0) (/ x (fma x x 1.0)))",
    "output_parens": 18,
    "avg_bits_err_input": 14.674814088112495,
    "avg_bits_err_output": 0.09725621061868284,
    "avg_bits_err_improve": 14.577557877493811,
    "time": 5108.985595703125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (- (/ (/ (- x 0.0) x) (+ x (/ 1.0 x))) 0.0) (/ x (fma x x 1.0)))",
    "output_parens": 18,
    "avg_bits_err_input": 14.674814088112495,
    "avg_bits_err_output": 0.09725621061868284,
    "avg_bits_err_improve": 14.577557877493811,
    "time": 5289.088623046875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(* (/ x (hypot 1.0 x)) (/ 1.0 (hypot 1.0 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 14.674814088112495,
    "avg_bits_err_output": 0.02030921094065507,
    "avg_bits_err_improve": 14.65450487717184,
    "time": 7961.193115234375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(if (<= x -2e+45) (if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (- (/ (if (!= (/ (/ x (+ x (/ 1.0 x))) 2.0) 0.0) (/ x (+ x (/ 1.0 x))) (/ x (+ x (/ 1.0 x)))) x) 0.0) (/ x (fma x x 1.0))) (if (<= x 5e-7) (/ x (+ (* x x) 1.0)) (if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (- (/ (if (!= (/ (/ x (+ x (/ 1.0 x))) 2.0) 0.0) (/ x (+ x (/ 1.0 x))) (/ x (+ x (/ 1.0 x)))) x) 0.0) (/ x (fma x x 1.0)))))",
    "output_parens": 59,
    "avg_bits_err_input": 15.11125884618631,
    "avg_bits_err_output": 0.01525,
    "avg_bits_err_improve": 15.09600884618631,
    "time": 9906.731201171875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 15.11125884618631,
    "avg_bits_err_output": 15.11125884618631,
    "avg_bits_err_improve": 0,
    "time": 21789.618896484375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (- (/ (/ (- x 0.0) x) (+ x (/ 1.0 x))) 0.0) (/ x (fma x x 1.0)))",
    "output_parens": 18,
    "avg_bits_err_input": 15.11125884618631,
    "avg_bits_err_output": 0.09119812031259014,
    "avg_bits_err_improve": 15.02006072587372,
    "time": 9616.72021484375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (- (/ (/ (- x 0.0) x) (+ x (/ 1.0 x))) 0.0) (/ x (fma x x 1.0)))",
    "output_parens": 18,
    "avg_bits_err_input": 15.11125884618631,
    "avg_bits_err_output": 0.09119812031259014,
    "avg_bits_err_improve": 15.02006072587372,
    "time": 9993.845947265625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(* (/ x (hypot 1.0 x)) (/ 1.0 (hypot 1.0 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 15.11125884618631,
    "avg_bits_err_output": 0.01751428593921275,
    "avg_bits_err_improve": 15.093744560247098,
    "time": 9570.069580078125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 14.876132882244992,
    "avg_bits_err_output": 14.876132882244992,
    "avg_bits_err_improve": 0,
    "time": 13577.262451171875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 14.876132882244992,
    "avg_bits_err_output": 14.876132882244992,
    "avg_bits_err_improve": 0,
    "time": 21053.04833984375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 14.876132882244992,
    "avg_bits_err_output": 14.876132882244992,
    "avg_bits_err_improve": 0,
    "time": 13307.821533203125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 14.876132882244992,
    "avg_bits_err_output": 14.876132882244992,
    "avg_bits_err_improve": 0,
    "time": 12372.87060546875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-no-ff"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(* (/ x (hypot 1.0 x)) (/ 1.0 (hypot 1.0 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 14.876132882244992,
    "avg_bits_err_output": 0.01784924843993391,
    "avg_bits_err_improve": 14.858283633805058,
    "time": 7968.354736328125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "main"
  }
]
